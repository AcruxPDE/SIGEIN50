-- =============================================
-- Proyecto: SistemaSIGEIN 5.0
-- Copyright (c) - Acrux - 2015
-- Author: Margarita Salcedo
-- CRETAE date: 12/11/2015
-- Description: Inserta un nuevo registro en la tabla C_EMPLEADO_ESCOLARIDAD
-- =============================================
CREATE PROCEDURE [ADM].[SPE_INSERTA_ACTUALIZA_C_EMPLEADO_ESCOLARIDAD] 
    	@XML_RESULTADO XML = '' OUT      --APLICA PARA REGRESAR UN NÚMERO 0 PARA ERROR Y 1 PARA CORRECTO
  --  	, @PIN_ID_EMPLEADO_ESCOLARIDAD AS int
		--, @PIN_ID_EMPLEADO AS int
		--, @PIN_ID_CANDIDATO AS int
		--, @PIN_ID_ESCOLARIDAD AS int
		--, @PIN_CL_INSTITUCION AS int
		--, @PIN_NB_INSTITUCION AS nvarchar(50)
		--, @PIN_FE_PERIODO_INICIO AS date
		--, @PIN_FE_PERIODO_FIN AS date
		--, @PIN_CL_ESTADO_ESCOLARIDAD AS nvarchar(10)
		, @PIN_CL_USUARIO_APP_CREA AS nvarchar(50)
		, @PIN_CL_USUARIO_APP_MODIFICA AS nvarchar(50)
		, @PIN_NB_PROGRAMA_CREA AS nvarchar(50)
		, @PIN_NB_PROGRAMA_MODIFICA AS nvarchar(50)
		--, @PIN_TIPO_TRANSACCION CHAR(1)             --I=INSERCIÓN   A=ACTUALIZACIÓN
		, @P_XML_ARCHIVO XML

AS 
BEGIN  
	--SE DECLARA E INICIALIZA LA VARIABLE QUE NOS INDICARA SI GENERAMOS LA TRANSACCION EN ESTE SP
	DECLARE @V_EXIST_TRAN BIT = 0
    	BEGIN TRY
		--SE VERIFICA SI EXISTE UNA TRANSACCION EN EJECUCION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--EN CASO DE QUE NO SE INICIALIZA LA TRANSACCION
			BEGIN TRANSACTION
			--SE EDITA LA VARIABLE QUE INDICA QUE SE INICIO LA TRANSACCION EN ESTE BLOQUE PARA CANCELARLA SI ES NECESARIO
			SET @V_EXIST_TRAN = 1
		END	

		DECLARE @TABLA TABLE (ID_EMPLEADO_ESCOLARIDAD INT, ID_CANDIDATO INT, ID_EMPLEADO INT, ID_ESCOLARIDAD INT, NB_INSTITUCION NVARCHAR(50), FE_PERIODO_INICIO DATE, FE_PERIODO_FIN DATE, CL_ESTADO_ESCOLARIDAD NVARCHAR(10), CL_INSTITUCION INT)

		DECLARE @V_ID_EMPLEADO_ESCOLARIDAD INT
		      , @V_ID_CANDIDATO INT
			  , @V_ID_EMPLEADO INT
			  , @V_ID_ESCOLARIDAD INT
			  , @V_NB_INSTITUCION NVARCHAR(50)
			  , @V_FE_PERIODO_INICIO DATE
			  , @V_FE_PERIODO_FIN DATE 
			  , @V_CL_ESTADO_ESCOLARIDAD NVARCHAR(10)
			  , @V_CL_INSTITUCION INT
	,@CFE_SISTEMA DATETIME = dbo.F_GETDATE()


		INSERT @TABLA(ID_EMPLEADO_ESCOLARIDAD, ID_CANDIDATO, ID_EMPLEADO, ID_ESCOLARIDAD, NB_INSTITUCION,FE_PERIODO_INICIO, FE_PERIODO_FIN, CL_ESTADO_ESCOLARIDAD, CL_INSTITUCION)
				SELECT LINEAS.value('@ID_EMPLEADO_ESCOLARIDAD','INT')
					 , CASE WHEN LINEAS.value('@ID_CANDIDATO','INT') = 0 THEN NULL
							ELSE LINEAS.value('@ID_CANDIDATO','INT') END AS ID_CANDIDATO
					 , CASE WHEN LINEAS.value('@ID_EMPLEADO','INT') = 0 THEN NULL
							ELSE LINEAS.value('@ID_EMPLEADO','INT') END AS ID_EMPLEADO
				     , LINEAS.value('@ID_ESCOLARIDAD','INT')
					 , LINEAS.value('@NB_INSTITUCION','NVARCHAR(50)')
					 , LINEAS.value('@FE_PERIODO_INICIO','DATE')
					 , LINEAS.value('@FE_PERIODO_FIN','DATE')
					 , LINEAS.value('@CL_ESTADO_ESCOLARIDAD','NVARCHAR(10)')
					 , CASE WHEN LINEAS.value('@CL_INSTITUCION','INT') = 0 THEN NULL
							ELSE LINEAS.value('@CL_INSTITUCION','INT') END AS CL_INSTITUCION
				FROM @P_XML_ARCHIVO.nodes('/ESCOLARIDADES/ESCOLARIDAD') AS LINEA(LINEAS)

				SELECT * FROM @TABLA

		DECLARE DETALLE CURSOR FOR
			SELECT ID_EMPLEADO_ESCOLARIDAD, ID_CANDIDATO, ID_EMPLEADO, ID_ESCOLARIDAD, NB_INSTITUCION,FE_PERIODO_INICIO, FE_PERIODO_FIN, CL_ESTADO_ESCOLARIDAD, CL_INSTITUCION FROM @TABLA
		OPEN DETALLE

		FETCH NEXT FROM DETALLE
		INTO  @V_ID_EMPLEADO_ESCOLARIDAD, @V_ID_CANDIDATO, @V_ID_EMPLEADO, @V_ID_ESCOLARIDAD, @V_NB_INSTITUCION, @V_FE_PERIODO_INICIO, @V_FE_PERIODO_FIN, @V_CL_ESTADO_ESCOLARIDAD, @V_CL_INSTITUCION

		WHILE @@FETCH_STATUS = 0
		BEGIN

			IF @V_ID_EMPLEADO_ESCOLARIDAD = 0
			BEGIN
					INSERT INTO IDP.C_EMPLEADO_ESCOLARIDAD
							   ([ID_EMPLEADO]
								, [ID_CANDIDATO]
								, [ID_ESCOLARIDAD]
								, [CL_INSTITUCION]
								, [NB_INSTITUCION]
								, [FE_PERIODO_INICIO]
								, [FE_PERIODO_FIN]
								, [CL_ESTADO_ESCOLARIDAD]
								, [FE_CREACION]
								, [CL_USUARIO_APP_CREA]
								, [NB_PROGRAMA_CREA]
							)
					VALUES
							   (@V_ID_EMPLEADO
								, @V_ID_CANDIDATO
								, @V_ID_ESCOLARIDAD
								, @V_CL_INSTITUCION
								, @V_NB_INSTITUCION
								, @V_FE_PERIODO_INICIO
								, @V_FE_PERIODO_FIN
								, @V_CL_ESTADO_ESCOLARIDAD
								, @CFE_SISTEMA
								, @PIN_CL_USUARIO_APP_CREA
								, @PIN_NB_PROGRAMA_CREA
							)		

			END
			ELSE
			BEGIN
				
					UPDATE IDP.C_EMPLEADO_ESCOLARIDAD SET
						[ID_EMPLEADO] = @V_ID_EMPLEADO
						, [ID_CANDIDATO] = @V_ID_CANDIDATO
						, [ID_ESCOLARIDAD] = @V_ID_ESCOLARIDAD
						, [CL_INSTITUCION] = @V_CL_INSTITUCION
						, [NB_INSTITUCION] = @V_NB_INSTITUCION
						, [FE_PERIODO_INICIO] = @V_FE_PERIODO_INICIO
						, [FE_PERIODO_FIN] = @V_FE_PERIODO_FIN
						, [CL_ESTADO_ESCOLARIDAD] = @V_CL_ESTADO_ESCOLARIDAD
						, [FE_MODIFICACION] = @CFE_SISTEMA
						, [CL_USUARIO_APP_MODIFICA] = @PIN_CL_USUARIO_APP_MODIFICA
						, [NB_PROGRAMA_MODIFICA] = @PIN_NB_PROGRAMA_MODIFICA
					WHERE [ID_EMPLEADO_ESCOLARIDAD] = @V_ID_EMPLEADO_ESCOLARIDAD

			END


			FETCH NEXT FROM DETALLE
			INTO @V_ID_EMPLEADO_ESCOLARIDAD, @V_ID_CANDIDATO, @V_ID_EMPLEADO, @V_ID_ESCOLARIDAD, @V_NB_INSTITUCION, @V_FE_PERIODO_INICIO, @V_FE_PERIODO_FIN, @V_CL_ESTADO_ESCOLARIDAD, @V_CL_INSTITUCION
		END;

		CLOSE DETALLE;
		DEALLOCATE DETALLE;
		--SE DEVUELVE LA VARIABLE DE RETORNO INDICANDO QUE TODO SE REALIZO CORRECTAMENTE
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, ERROR_NUMBER(), 'SUCCESSFUL')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Proceso exitoso', 'ES')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Successful Process', 'EN')
		--SI SE GENERO UNA TRANSACCION EN ESTE BLOQUE LA TERMINARA
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT	
	END TRY
	BEGIN CATCH		
		--SI OCURRIO UN ERROR Y SE INICIO UNA TRANSACCION ENE ESTE BLOQUE SE CANCELARA LA TRANSACCION
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
		--SE INDICA EN LA VARIABLE DE RETORNO QUE OCURRIO UN ERROR
		--SET @POUT_CLAVE_RETORNO = 0
		--SE INSERTA EL ERROR EN LA TABLA		
		DECLARE @ERROR_CLAVE INT  = 	ERROR_NUMBER()
		DECLARE @ERROR_MENSAJE NVARCHAR(250)  = 	 ERROR_MESSAGE()
		
				SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, @ERROR_CLAVE, 'ERROR')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Ocurrió un error al procesar el registro', 'ES')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Ocurrió un error al procesar el registro', 'EN')
			
	END CATCH
END
