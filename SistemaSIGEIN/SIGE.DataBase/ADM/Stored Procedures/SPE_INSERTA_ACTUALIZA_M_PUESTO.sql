-- =============================================
-- Proyecto: Sigein 5.0
-- Copyright (c) - Acrux - 2015
-- Author: Margarita Salcedo
-- CREATE date: 14/09/2015
-- Description: Inserta un nuevo M_PUESTO
-- =============================================
CREATE PROCEDURE [ADM].[SPE_INSERTA_ACTUALIZA_M_PUESTO] 
		@XML_RESULTADO XML = '' OUT      --APLICA PARA REGRESAR UN NÚMERO 0 PARA ERROR Y 1 PARA CORRECTO
		, @PIN_ID_PUESTO AS int = NULL
		, @PIN_CL_USUARIO AS nvarchar(50)
		, @PIN_NB_PROGRAMA AS nvarchar(50)
		, @PIN_TIPO_TRANSACCION CHAR(1)             --I=INSERCIÓN   A=ACTUALIZACIÓN
		, @PIN_XML_PUESTO AS XML
AS 
BEGIN
	--SE DECLARA E INICIALIZA LA VARIABLE QUE NOS INDICARA SI GENERAMOS LA TRANSACCION EN ESTE SP
	DECLARE @V_EXIST_TRAN BIT = 0
	BEGIN TRY
		--SE VERIFICA SI EXISTE UNA TRANSACCION EN EJECUCION
		IF (@@TRANCOUNT = 0)
		BEGIN
			--EN CASO DE QUE NO SE INICIALIZA LA TRANSACCION
			BEGIN TRANSACTION
			--SE EDITA LA VARIABLE QUE INDICA QUE SE INICIO LA TRANSACCION EN ESTE BLOQUE PARA CANCELARLA SI ES NECESARIO
			SET @V_EXIST_TRAN = 1
		END

		--SE VERIFICA SI SE INSERTA EL REGISTRO O SE ACTUALIZARA SEGUN LA VARIABLE DE TIPO DE TRANSACCION  QUE RECIBE EL SP
		DECLARE @Funciones TABLE(
			ID_PROG int NOT NULL,
			ID_PUESTO_FUNCION int NOT NULL);

		DECLARE @Competencias TABLE(
			ID_PROG INT NOT NULL,
			ID_COMPETENCIA_FUNCION INT NOT NULL,
			ID_PUESTO_FUNCION INT NOT NULL);

		IF @PIN_TIPO_TRANSACCION = 'I'
		BEGIN

			INSERT INTO [ADM].[M_PUESTO]
						([FG_ACTIVO]
						,[CL_PUESTO]
						,[NB_PUESTO]
						,[NO_EDAD_MINIMA]
						,[NO_EDAD_MAXIMA]
						,[CL_GENERO]
						,[CL_ESTADO_CIVIL]
						,[XML_REQUERIMIENTOS]
						,[XML_OBSERVACIONES]
						,[XML_RESPONSABILIDAD]
						,[XML_AUTORIDAD]
						,[CL_TIPO_PUESTO]
						,[ID_CENTRO_ADMINISTRATIVO]
						,[ID_CENTRO_OPERATIVO]
						,[ID_DEPARTAMENTO]
						,[CL_POSICION_ORGANIGRAMA]
						,[XML_CAMPOS_ADICIONALES]
						,CL_DOCUMENTO
						,CL_VERSION
						,FE_ELABORACION
						,NB_ELABORO
						,FE_REVISION
						,NB_REVISO
						,FE_AUTORIZACION
						,NB_AUTORIZO
						,DS_CONTROL_CAMBIOS
						,CL_TIPO_PRESTACIONES
						,XML_PRESTACIONES
						,[FE_CREACION]
						,[CL_USUARIO_APP_CREA]
						,[NB_PROGRAMA_CREA])
			SELECT
				1 AS FG_ACTIVO,
				d.value('@CL_PUESTO', 'NVARCHAR(20)') AS CL_PUESTO,
				d.value('@NB_PUESTO', 'NVARCHAR(100)') AS NB_PUESTO,
				d.value('@NO_EDAD_MINIMA', 'TINYINT') AS NO_EDAD_MINIMA,
				d.value('@NO_EDAD_MAXIMA', 'TINYINT') AS NO_EDAD_MAXIMA,
				d.value('@CL_GENERO', 'NVARCHAR(20)') AS CL_GENERO,
				d.value('@CL_ESTADO_CIVIL', 'NVARCHAR(20)') AS CL_ESTADO_CIVIL,
				d.value('@XML_REQUERIMIENTOS', 'NVARCHAR(max)') AS XML_REQUERIMIENTOS,
				d.value('@XML_OBSERVACIONES', 'NVARCHAR(max)') AS XML_OBSERVACIONES,
				d.value('@XML_RESPONSABILIDAD', 'NVARCHAR(max)') AS XML_RESPONSABILIDAD,
				d.value('@XML_AUTORIDAD', 'NVARCHAR(max)') AS XML_AUTORIDAD,
				d.value('@CL_TIPO_PUESTO', 'NVARCHAR(20)') AS CL_TIPO_PUESTO,
				d.value('@ID_CENTRO_ADMINISTRATIVO', 'UNIQUEIDENTIFIER') AS ID_CENTRO_ADMINISTRATIVO,
				d.value('@ID_CENTRO_OPERATIVO', 'UNIQUEIDENTIFIER') AS ID_CENTRO_OPERATIVO,
				d.value('@ID_DEPARTAMENTO', 'INT') AS ID_DEPARTAMENTO,
				d.value('@CL_POSICION_ORGANIGRAMA', 'NVARCHAR(20)') AS CL_POSICION_ORGANIGRAMA,
				d.query('./CAMPOS') AS XML_CAMPOS_ADICIONALES,
				d.value('@CL_DOCUMENTO', 'NVARCHAR(100)') AS CL_DOCUMENTO,
				d.value('@CL_VERSION', 'nvarchar(100)') as CL_REVISION,
				d.value('@FE_ELABORACION,', 'DATETIME') AS FE_ELABORACION,
				d.value('@NB_ELABORO', 'NVARCHAR(100)') AS NB_ELABORO,
				d.value('@FE_REVISION', 'DATETIME') AS FE_REVISION,
				d.value('@NB_REVISO', 'NVARCHAR(100)') AS NB_REVISION,
				d.value('@FE_AUTORIZACION', 'DATETIME') AS FE_AUTORIZACION,
				d.value('@NB_AUTORIZO', 'NVARCHAR(100)') AS NB_AUTORIZO,
				d.value('@DS_CONTROL_CAMBIOS', 'NVARCHAR(200)') AS DS_CONTROL_CAMBIOS,
				d.value('@CL_TIPO_PRESTACIONES', 'NVARCHAR(20)') AS CL_TIPO_PRESTACIONES,
				d.value('@XML_PRESTACIONES', 'NVARCHAR(MAX)') AS XML_PRESTACIONES,
				GETDATE() AS FE_ACTUAL,
				@PIN_CL_USUARIO,
				@PIN_NB_PROGRAMA
			FROM @PIN_XML_PUESTO.nodes('PUESTO/DESCRIPTIVO') AS T(d)

			SET @PIN_ID_PUESTO = SCOPE_IDENTITY();

		END
		ELSE
		BEGIN

			UPDATE [ADM].[M_PUESTO]
			SET [FG_ACTIVO] = P.FG_ACTIVO
				,[CL_PUESTO] = P.CL_PUESTO
				,[NB_PUESTO] = P.NB_PUESTO
				,[NO_EDAD_MINIMA] = P.NO_EDAD_MINIMA
				,[NO_EDAD_MAXIMA] = P.NO_EDAD_MAXIMA
				,[CL_GENERO] = P.CL_GENERO
				,[CL_ESTADO_CIVIL] = P.CL_ESTADO_CIVIL
				,[XML_REQUERIMIENTOS] = P.XML_REQUERIMIENTOS
				,[XML_OBSERVACIONES] = P.XML_OBSERVACIONES
				,[XML_RESPONSABILIDAD] = P.XML_RESPONSABILIDAD
				,[XML_AUTORIDAD] = P.XML_AUTORIDAD
				,[CL_TIPO_PUESTO] = P.CL_TIPO_PUESTO
				,[ID_CENTRO_ADMINISTRATIVO] = P.ID_CENTRO_ADMINISTRATIVO
				,[ID_CENTRO_OPERATIVO] = P.ID_CENTRO_OPERATIVO
				,[ID_DEPARTAMENTO] = P.ID_DEPARTAMENTO
				,[CL_POSICION_ORGANIGRAMA] = P.CL_POSICION_ORGANIGRAMA
				,[XML_CAMPOS_ADICIONALES] = P.XML_CAMPOS_ADICIONALES
				,CL_DOCUMENTO = P.CL_DOCUMENTO
				,CL_VERSION = P.CL_REVISION
				,FE_ELABORACION = P.FE_ELABORACION
				,NB_ELABORO = P.NB_ELABORO
				,FE_REVISION = P.FE_REVISION
				,NB_REVISO = P.NB_REVISION
				,FE_AUTORIZACION =  P.FE_ACTUAL
				,NB_AUTORIZO = P.NB_AUTORIZO
				,DS_CONTROL_CAMBIOS = P.DS_CONTROL_CAMBIOS
				,CL_TIPO_PRESTACIONES = P.CL_TIPO_PRESTACIONES
				,XML_PRESTACIONES = P.XML_PRESTACIONES
				,[FE_MODIFICACION] = P.FE_ACTUAL
				,[CL_USUARIO_APP_MODIFICA] = @PIN_CL_USUARIO
				,[NB_PROGRAMA_MODIFICA] = @PIN_NB_PROGRAMA
			FROM(
				SELECT
					d.value('@ID_DESCRIPTIVO', 'INT') AS ID_DESCRIPTIVO,
					1 AS FG_ACTIVO,
					d.value('@CL_PUESTO', 'NVARCHAR(20)') AS CL_PUESTO,
					d.value('@NB_PUESTO', 'NVARCHAR(100)') AS NB_PUESTO,
					d.value('@NO_EDAD_MINIMA', 'TINYINT') AS NO_EDAD_MINIMA,
					d.value('@NO_EDAD_MAXIMA', 'TINYINT') AS NO_EDAD_MAXIMA,
					d.value('@CL_GENERO', 'NVARCHAR(20)') AS CL_GENERO,
					d.value('@CL_ESTADO_CIVIL', 'NVARCHAR(20)') AS CL_ESTADO_CIVIL,
					d.value('@XML_REQUERIMIENTOS', 'NVARCHAR(max)') AS XML_REQUERIMIENTOS,
					d.value('@XML_OBSERVACIONES', 'NVARCHAR(max)') AS XML_OBSERVACIONES,
					d.value('@XML_RESPONSABILIDAD', 'NVARCHAR(max)') AS XML_RESPONSABILIDAD,
					d.value('@XML_AUTORIDAD', 'NVARCHAR(max)') AS XML_AUTORIDAD,
					d.value('@CL_TIPO_PUESTO', 'NVARCHAR(20)') AS CL_TIPO_PUESTO,
					d.value('@ID_CENTRO_ADMINISTRATIVO', 'UNIQUEIDENTIFIER') AS ID_CENTRO_ADMINISTRATIVO,
					d.value('@ID_CENTRO_OPERATIVO', 'UNIQUEIDENTIFIER') AS ID_CENTRO_OPERATIVO,
					d.value('@ID_DEPARTAMENTO', 'INT') AS ID_DEPARTAMENTO,
					d.value('@CL_POSICION_ORGANIGRAMA', 'NVARCHAR(20)') AS CL_POSICION_ORGANIGRAMA,
					d.query('./CAMPOS') AS XML_CAMPOS_ADICIONALES,
					d.value('@CL_DOCUMENTO', 'NVARCHAR(100)') AS CL_DOCUMENTO,
					d.value('@CL_VERSION', 'nvarchar(100)') as CL_REVISION,
					d.value('@FE_ELABORACION,', 'DATETIME') AS FE_ELABORACION,
					d.value('@NB_ELABORO', 'NVARCHAR(100)') AS NB_ELABORO,
					d.value('@FE_REVISION', 'DATETIME') AS FE_REVISION,
					d.value('@NB_REVISO', 'NVARCHAR(100)') AS NB_REVISION,
					d.value('@FE_AUTORIZACION', 'DATETIME') AS FE_AUTORIZACION,
					d.value('@NB_AUTORIZO', 'NVARCHAR(100)') AS NB_AUTORIZO,
					d.value('@DS_CONTROL_CAMBIOS', 'NVARCHAR(200)') AS DS_CONTROL_CAMBIOS,
					d.value('@CL_TIPO_PRESTACIONES', 'NVARCHAR(20)') AS CL_TIPO_PRESTACIONES,
					d.value('@XML_PRESTACIONES', 'NVARCHAR(MAX)') AS XML_PRESTACIONES,
					GETDATE() AS FE_ACTUAL
				FROM @PIN_XML_PUESTO.nodes('PUESTO/DESCRIPTIVO') AS T(d)
			) AS P
			WHERE ID_PUESTO = P.ID_DESCRIPTIVO
		END

		-- PUESTO ESCOLARIDAD
		DELETE ADM.C_PUESTO_ESCOLARIDAD WHERE ID_PUESTO = @PIN_ID_PUESTO

		INSERT INTO [ADM].[C_PUESTO_ESCOLARIDAD]
					([ID_PUESTO]
					,[ID_ESCOLARIDAD]
					,[FE_CREACION]
					,[CL_USUARIO_APP_CREA]
					,[NB_PROGRAMA_CREA])
		SELECT
			@PIN_ID_PUESTO,
			d.value('@ID_ESCOLARIDAD', 'INT') AS ID_COMPETENCIA,
			GETDATE(),
			@PIN_CL_USUARIO,
			@PIN_NB_PROGRAMA
		FROM @PIN_XML_PUESTO.nodes('PUESTO/ESCOLARIDADES/ESCOLARIDAD') AS T(d)


		-- COMPETENCIAS ESPECIFICAS
		DELETE ADM.C_PUESTO_COMPETENCIA WHERE ID_PUESTO = @PIN_ID_PUESTO AND CL_TIPO_COMPETENCIA = 'PERFIL'

		INSERT INTO [ADM].[C_PUESTO_COMPETENCIA]
					([ID_PUESTO]
					,[ID_COMPETENCIA]
					,[CL_TIPO_COMPETENCIA]
					,[FE_CREACION]
					,[CL_USUARIO_APP_CREA]
					,[NB_PROGRAMA_CREA])
		SELECT
			@PIN_ID_PUESTO,
			d.value('@ID_COMPETENCIA', 'INT') AS ID_COMPETENCIA,
			d.value('@CL_TIPO_COMPETENCIA','nvarchar(50)') as CL_TIPO_COMPETENCIA,
			GETDATE(),
			@PIN_CL_USUARIO,
			@PIN_NB_PROGRAMA
		FROM @PIN_XML_PUESTO.nodes('PUESTO/COMPETENCIAS/COMPETENCIA') AS T(d)


		-- EXPERIENCIA
		DELETE ADM.C_PUESTO_EXPERIENCIA WHERE ID_PUESTO = @PIN_ID_PUESTO

		INSERT INTO [ADM].[C_PUESTO_EXPERIENCIA]
					([ID_PUESTO]
					,[ID_AREA_INTERES]
					,[NO_TIEMPO]
					,[CL_UNIDAD_TIEMPO]
					,[CL_NIVEL_REQUERIDO]
					,[FE_CREACION]
					,[CL_USUARIO_APP_CREA]
					,[NB_PROGRAMA_CREA])
		SELECT
			@PIN_ID_PUESTO,
			d.value('@ID_AREA_INTERES', 'INT') AS ID_AREA_INTERES,
			d.value('@NO_TIEMPO', 'DECIMAL(12,2)') AS NO_TIEMPO,
			'AÑOS',
			d.value('@CL_NIVEL_REQUERIDO', 'NVARCHAR(20)') AS CL_NIVEL_REQUERIDO,
			GETDATE(),
			@PIN_CL_USUARIO,
			@PIN_NB_PROGRAMA
		FROM @PIN_XML_PUESTO.nodes('PUESTO/EXPERIENCIA/EXP') AS T(d)


		-- PUESTOS RELACIONADOS
		DELETE ADM.C_PUESTO_RELACIONADO WHERE ID_PUESTO = @PIN_ID_PUESTO

		INSERT INTO [ADM].[C_PUESTO_RELACIONADO]
					([ID_PUESTO]
					,[ID_PUESTO_RELACIONADO]
					,[CL_TIPO_RELACION]
					,[FE_CREACION]
					,[CL_USUARIO_APP_CREA]
					,[NB_PROGRAMA_CREA])
		SELECT
			@PIN_ID_PUESTO,
			d.value('@ID_PUESTO_REL', 'INT') AS ID_PUESTO_REL,
			d.value('@CL_TIPO_RELACION', 'NVARCHAR(20)') AS CL_TIPO_RELACION,
			GETDATE(),
			@PIN_CL_USUARIO,
			@PIN_NB_PROGRAMA
		FROM @PIN_XML_PUESTO.nodes('PUESTO/PUESTOS_REL/PUESTO_REL') AS T(d)


		-- FUNCIONES GENERICAS
		DELETE ADM.C_FUNCION_INDICADOR WHERE ID_PUESTO_COMPETENCIA IN( SELECT ID_PUESTO_COMPETENCIA FROM ADM.C_PUESTO_COMPETENCIA WHERE ID_PUESTO = @PIN_ID_PUESTO AND CL_TIPO_COMPETENCIA = 'FUNCIONES')
		DELETE ADM.C_PUESTO_COMPETENCIA WHERE ID_PUESTO = @PIN_ID_PUESTO AND CL_TIPO_COMPETENCIA = 'FUNCIONES'
		DELETE ADM.C_PUESTO_FUNCION WHERE ID_PUESTO = @PIN_ID_PUESTO

		MERGE ADM.C_PUESTO_FUNCION AS Target
		USING (
			SELECT
				@PIN_ID_PUESTO AS ID_PUESTO,
				d.value('@ID_PUESTO_FUNCION', 'INT') AS ID_PUESTO_FUNCION,
				d.value('@NB_FUNCION', 'NVARCHAR(50)') AS NB_FUNCION,
				d.value('@DS_FUNCION', 'NVARCHAR(200)') AS DS_FUNCION,
				d.value('@DS_DETALLE', 'NVARCHAR(200)') AS DS_DETALLE,
				d.value('@DS_NOTAS', 'NVARCHAR(200)') AS DS_NOTAS
			FROM @PIN_XML_PUESTO.nodes('PUESTO/FUNCIONES/FUNCION') AS T(d)
		) AS Source
		ON (1=0)
		WHEN NOT MATCHED THEN
			INSERT (NB_PUESTO_FUNCION, DS_PUESTO_FUNCION, ID_PUESTO,XML_DETALLE, XML_NOTAS, FE_CREACION, CL_USUARIO_APP_CREA, NB_PROGRAMA_CREA)
			VALUES (source.NB_FUNCION, source.DS_FUNCION, source.ID_PUESTO, Source.DS_DETALLE, Source.DS_NOTAS, GETDATE(), @PIN_CL_USUARIO, @PIN_NB_PROGRAMA)
			OUTPUT [source].ID_PUESTO_FUNCION, INSERTED.ID_PUESTO_FUNCION INTO @Funciones;


		MERGE ADM.C_PUESTO_COMPETENCIA AS Target
		USING
		(
				SELECT
				d.value('@ID_COMPETENCIA', 'INT') AS ID_COMPETENCIA,
				d.value('@CL_TIPO_COMPETENCIA', 'NVARCHAR(20)') AS CL_TIPO_COMPETENCIA,
				d.value('@ID_FUNCION_COMPETENCIA', 'INT') AS ID_FUNCION_COMPETENCIA,
				f.ID_PUESTO_FUNCION,
				cn.ID_NIVEL_COMPETENCIA
			FROM @PIN_XML_PUESTO.nodes('PUESTO/FUNCION_COMPETENCIAS/FUNCION_COMPETENCIA') AS T(d)
			INNER JOIN ADM.C_COMPETENCIA_NIVEL cn ON d.value('@ID_COMPETENCIA', 'INT') = cn.ID_COMPETENCIA AND d.value('@NO_NIVEL', 'INT') = CAST(cn.NO_VALOR_NIVEL AS INT)
			INNER JOIN @Funciones f ON d.value('@ID_FUNCION', 'INT') = f.ID_PROG
		) AS source
		ON (1 = 0)
		WHEN NOT MATCHED THEN
			INSERT (ID_PUESTO, ID_COMPETENCIA, ID_NIVEL_DESEADO, ID_PUESTO_FUNCION, CL_TIPO_COMPETENCIA, FE_CREACION, CL_USUARIO_APP_CREA, NB_PROGRAMA_CREA)
			VALUES (@PIN_ID_PUESTO, Source.ID_COMPETENCIA, Source.ID_NIVEL_COMPETENCIA, Source.ID_PUESTO_FUNCION, Source.CL_TIPO_COMPETENCIA, GETDATE(), @PIN_CL_USUARIO, @PIN_NB_PROGRAMA)
			OUTPUT Source.ID_FUNCION_COMPETENCIA, Inserted.ID_PUESTO_COMPETENCIA, Source.ID_PUESTO_FUNCION INTO @Competencias;


		MERGE ADM.C_FUNCION_INDICADOR AS Target
		USING
		(
			SELECT
				d.value('@ID_INDICADOR', 'INT') AS ID_INDICADOR,
				c.ID_PUESTO_FUNCION,
				c.ID_COMPETENCIA_FUNCION
			FROM @PIN_XML_PUESTO.nodes('PUESTO/FUNCION_INDICADORES/FUNCION_INDICADOR') AS T(d)
			INNER JOIN @Competencias c ON d.value('@ID_PUESTO_COMPETENCIA', 'NVARCHAR(20)') = c.ID_PROG
		) AS source
		ON (1 = 0)
		WHEN NOT MATCHED THEN
			INSERT (ID_INDICADOR, ID_PUESTO_FUNCION, ID_PUESTO_COMPETENCIA, FE_CREACION, CL_USUARIO_APP_CREA, NB_PROGRAMA_CREA)
			VALUES(Source.ID_INDICADOR, Source.ID_PUESTO_FUNCION, Source.ID_COMPETENCIA_FUNCION, GETDATE(), @PIN_CL_USUARIO, @PIN_NB_PROGRAMA);


		-- COMPETENCIAS GENERICAS

		DELETE ADM.C_PUESTO_COMPETENCIA WHERE ID_PUESTO = @PIN_ID_PUESTO AND CL_TIPO_COMPETENCIA = 'COMPETENCIA GENERICA'

		INSERT INTO [ADM].[C_PUESTO_COMPETENCIA]
					([ID_PUESTO]
					,[ID_COMPETENCIA]
					,[ID_NIVEL_DESEADO]
					,[CL_TIPO_COMPETENCIA]
					,[FE_CREACION]
					,[CL_USUARIO_APP_CREA]
					,[NB_PROGRAMA_CREA])
		SELECT
			@PIN_ID_PUESTO,
			d.value('@ID_COMPETENCIA', 'INT') AS ID_COMPETENCIA,
			d.value('@ID_NIVEL_DESEADO', 'INT') AS ID_NIVEL_DESEADO,
			d.value('@CL_TIPO_COMPETENCIA', 'NVARCHAR(20)') AS CL_TIPO_COMPETENCIA,
			GETDATE(),
			@PIN_CL_USUARIO,
			@PIN_NB_PROGRAMA
		FROM @PIN_XML_PUESTO.nodes('PUESTO/COMPETENCIAS_GEN/COMPETENCIA_GEN') AS T(d)


		--SE DEVUELVE LA VARIABLE DE RETORNO INDICANDO QUE TODO SE REALIZO CORRECTAMENTE
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Proceso exitoso', 'ES')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Successful Process', 'EN')
	
		--SI SE GENERO UNA TRANSACCION EN ESTE BLOQUE LA TERMINARA
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT
	END TRY
	BEGIN CATCH
		--SI OCURRIO UN ERROR Y SE INICIO UNA TRANSACCION ENE ESTE BLOQUE SE CANCELARA LA TRANSACCION
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
		--SE INDICA EN LA VARIABLE DE RETORNO QUE OCURRIO UN ERROR
		--SET @POUT_CLAVE_RETORNO = 0
		--SE INSERTA EL ERROR EN LA TABLA		
		DECLARE @ERROR_CLAVE INT  = 	ERROR_NUMBER()
		DECLARE @ERROR_MENSAJE NVARCHAR(250)  = 	 ERROR_MESSAGE()
		
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, @ERROR_CLAVE, 'ERROR')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Ocurrió un error al procesar el registro', 'ES')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Ocurrió un error al procesar el registro', 'EN')
			
	END CATCH
END
