-- =============================================
-- Proyecto: Sistema SIGEIN 5.0
-- Copyright (c) - Acrux - 2015
-- Author: Julio Díaz
-- CRETAE date: 24/11/2015
-- Description: Ejecuta la operación para inserción o actualización del rol
-- =============================================
CREATE PROCEDURE [ADM].[SPE_INSERTA_ACTUALIZA_ROLES] 
		  @XML_RESULTADO XML OUT     --APLICA PARA REGRESAR UN NÚMERO 0 PARA ERROR Y 1 PARA CORRECTO
    	, @PIN_ID_ROL AS INT = NULL
		, @PIN_CL_ROL AS NVARCHAR(30)
		, @PIN_NB_ROL AS NVARCHAR(100)
		, @PIN_FG_ACTIVO AS BIT
		, @PIN_XML_FUNCIONES AS XML
		, @PIN_CL_USUARIO AS NVARCHAR(50)
		, @PIN_NB_PROGRAMA AS NVARCHAR(50)
		, @PIN_TIPO_TRANSACCION CHAR(1)             --I=INSERCIÓN   A=ACTUALIZACIÓN
AS 
BEGIN  
	--SE DECLARA E INICIALIZA LA VARIABLE QUE NOS INDICARA SI GENERAMOS LA TRANSACCION EN ESTE SP
	DECLARE @V_EXIST_TRAN BIT = 0
		,@ID_ROL INT
		,@CFE_SISTEMA DATETIME = dbo.F_GETDATE()


    BEGIN TRY
		--SE VERIFICA SI EXISTE UNA TRANSACCION EN EJECUCION
		IF (@@TRANCOUNT = 0) BEGIN
			--EN CASO DE QUE NO SE INICIALIZA LA TRANSACCION
			BEGIN TRANSACTION
			--SE EDITA LA VARIABLE QUE INDICA QUE SE INICIO LA TRANSACCION EN ESTE BLOQUE PARA CANCELARLA SI ES NECESARIO
			SET @V_EXIST_TRAN = 1
		END

		IF @PIN_TIPO_TRANSACCION = 'I' BEGIN
			INSERT INTO ADM.C_ROL (
				CL_ROL
				, NB_ROL
				, FG_ACTIVO
				, FE_INACTIVO
				, FE_CREACION
				, CL_USUARIO_APP_CREA
				, NB_PROGRAMA_CREA
			) VALUES (
				@PIN_CL_ROL
				, @PIN_NB_ROL
				, @PIN_FG_ACTIVO
				, CASE WHEN @PIN_FG_ACTIVO = 0 THEN @CFE_SISTEMA ELSE NULL END
				, @CFE_SISTEMA
				, @PIN_CL_USUARIO
				, @PIN_NB_PROGRAMA
			)

			SET @ID_ROL = SCOPE_IDENTITY()

			INSERT INTO ADM.C_ROL_FUNCION (ID_ROL, ID_FUNCION)
			SELECT @ID_ROL, n.value('@ID_FUNCION', 'INT')
			FROM @PIN_XML_FUNCIONES.nodes('/FUNCIONES/FUNCION') AS XT(n)

			SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO(@@ROWCOUNT, 1, 'SUCCESSFUL')
			SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'El rol se agregó satisfactoriamente', 'ES')
			SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'El rol se agregó satisfactoriamente', 'EN')
		END

		IF @PIN_TIPO_TRANSACCION = 'A' AND @PIN_ID_ROL IS NOT NULL BEGIN

			SET @ID_ROL = @PIN_ID_ROL

			UPDATE ADM.C_ROL
			SET CL_ROL = @PIN_CL_ROL
				, NB_ROL = @PIN_NB_ROL
				, FE_INACTIVO = CASE WHEN FG_ACTIVO = 1 AND @PIN_FG_ACTIVO = 0 THEN @CFE_SISTEMA ELSE FE_INACTIVO END
				, FG_ACTIVO = @PIN_FG_ACTIVO
				, FE_MODIFICACION = @CFE_SISTEMA
				, CL_USUARIO_APP_MODIFICA = @PIN_CL_USUARIO
				, NB_PROGRAMA_MODIFICA = @PIN_NB_PROGRAMA
			WHERE ID_ROL = @ID_ROL

			DELETE FROM ADM.C_ROL_FUNCION WHERE ID_ROL = @ID_ROL

			INSERT INTO ADM.C_ROL_FUNCION (ID_ROL, ID_FUNCION)
			SELECT @ID_ROL, n.value('@ID_FUNCION', 'INT')
			FROM @PIN_XML_FUNCIONES.nodes('/FUNCIONES/FUNCION') AS XT(n)

			SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO(@@ROWCOUNT, 1, 'SUCCESSFUL')
			SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'El rol se editó satisfactoriamente', 'ES')
			SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'El rol se editó satisfactoriamente', 'EN')
		END

		
		-- EL XML DEVUELVE EL ERROR INDICADO POR SQL Y UN MSJ DE ERROR GENÉRICO

		--SI SE GENERO UNA TRANSACCION EN ESTE BLOQUE LA TERMINARA
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT	
	END TRY
	BEGIN CATCH
		--SI OCURRIO UN ERROR Y SE INICIO UNA TRANSACCION ENE ESTE BLOQUE SE CANCELARA LA TRANSACCION
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
		
		-- EL XML DEVUELVE EL ERROR INDICADO POR SQL Y UN MSJ DE ERROR GENÉRICO
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(ERROR_NUMBER(), ERROR_MESSAGE())
			
	END CATCH
END
