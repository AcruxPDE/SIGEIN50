-- =============================================
-- Proyecto: Sigein 5.0
-- Copyright (c) - Acrux - 2015
-- Author: Felipe Hernández Palafox
-- CREATE date: 03/12/2015
-- Description: Obtiene el descriptivo de puesto
-- =============================================

CREATE PROCEDURE [ADM].[SPE_OBTIENE_DESCRIPTIVO]
	@PIN_ID_DESCRIPTIVO AS INT = NULL
AS
BEGIN
	DECLARE
		@XML_ESCOLARIDADES XML,
		@XML_COMPETENCIAS XML,
		@XML_CATALOGO_COMPETENCIAS XML,
		@XML_GENEROS  XML,
		@XML_EDOCIVIL XML,
		@XML_EXPERIENCIA_NECESARIA XML,
		@XML_DEPARTAMENTO XML,
		@XML_CENTRO_ADMVO XML,
		@XML_CENTRO_OPTVO XML,
		@XML_PUESTOS XML,
		@XML_INDICADORES XML,
		@XmlDatoConfiguracion XML,
		@IdCatalogoGenero int,
		@IdCatalogoEdoCivil int,
		@IdCatalogoCompEsp nvarchar(50),
		@XML_CATALOGOS AS XML,
		@XML_PUESTO_ESCOLARIDAD AS XML,
		@XML_PUESTO_EXPERIENCIA AS XML,
		@XML_PUESTOS_RELACIONADOS AS XML,
		@XML_PUESTO_FUNCION AS XML,
		@XML_PUESTO_COMPETENCIA AS XML,
		@XML_PUESTO_INDICADOR AS XML,
		@XML_CAMPOS_ADICIONALES AS XML

	DECLARE 
		@V_ID_PUESTO int,
		@V_FG_ACTIVO bit,
		@V_FE_INACTIVO datetime,
		@V_CL_PUESTO nvarchar(40),
		@V_NB_PUESTO nvarchar(200),
		@V_NO_EDAD_MINIMA tinyint,
		@V_NO_EDAD_MAXIMA tinyint,
		@V_XML_REQUERIMIENTOS xml,
		@V_XML_OBSERVACIONES xml,
		@V_XML_RESPONSABILIDAD xml,
		@V_XML_AUTORIDAD xml,
		@V_XML_CURSOS_ADICIONALES xml,
		@V_XML_MENTOR xml,
		@V_CL_TIPO_PUESTO nvarchar(40),
		@V_XML_CAMPOS_ADICIONALES xml,
		@V_ID_BITACORA int,
		@V_CL_POSICION_ORGANIGRAMA nvarchar(40),
		@V_CL_DOCUMENTO AS nvarchar(100),
		@V_CL_VERSION AS nvarchar(100),
		@V_FE_ELABORACION AS date,
		@V_NB_ELABORO AS nvarchar(100),
		@V_FE_REVISION AS date,
		@V_NB_REVISO AS nvarchar(100),
		@V_FE_AUTORIZACION AS date,
		@V_NB_AUTORIZO AS nvarchar(100),
		@V_DS_CONTROL_CAMBIOS AS nvarchar(200),
		@V_CL_TIPO_PRESTACIONES AS NVARCHAR(20),
		@V_XML_PRESTACIONES AS XML

-- CATALOGOS
-- ESCOLARIDADES
	SET @XML_ESCOLARIDADES = (
		SELECT 
			CE.ID_ESCOLARIDAD AS '@ID_ESCOLARIDAD',
			CE.NB_ESCOLARIDAD AS '@NB_ESCOLARIDAD',
			CE.DS_ESCOLARIDAD AS '@DS_ESCOLARIDAD',
			--CE.CL_NIVEL_ESCOLARIDAD AS '@CL_NIVEL_ESCOLARIDAD',
			CE.FG_ACTIVO AS '@FG_ACTIVO',
			CE.CL_NIVEL_ESCOLARIDAD AS '@CL_NIVEL_ESCOLARIDAD',
			CE.CL_INSTITUCION AS '@CL_INSTITUCION',
			CNE.CL_TIPO_ESCOLARIDAD AS '@CL_TIPO_ESCOLARIDAD',
			CNE.CL_NIVEL_ESCOLARIDAD AS '@CL_NB_NIVEL_ESCOLARIDAD'
		FROM ADM.C_ESCOLARIDAD CE
			INNER JOIN ADM.C_NIVEL_ESCOLARIDAD CNE ON CE.CL_NIVEL_ESCOLARIDAD  = CNE.CL_NIVEL_ESCOLARIDAD
		WHERE CE.FG_ACTIVO = 1
		FOR XML PATH ('ESCOLARIDAD'), ROOT ('ESCOLARIDADES'))

	SELECT
		@XmlDatoConfiguracion = ADM.S_CONFIGURACION.XML_CONFIGURACION
	FROM ADM.S_CONFIGURACION

-- GENERO
	SELECT
		@IdCatalogoGenero  = T.C.value('@ID_CATALOGO', 'int')
	FROM @XmlDatoConfiguracion.nodes('/CONFIGURACIONES/CATALOGOS/GENERO') T(C)


	SET @XML_GENEROS = (
		SELECT
			ID_CATALOGO_VALOR AS '@ID_CATALOGO_VALOR'
			,CL_CATALOGO_VALOR AS '@CL_CATALOGO_VALOR'
			,NB_CATALOGO_VALOR AS '@NB_CATALOGO_VALOR'
			,DS_CATALOGO_VALOR AS '@DS_CATALOGO_VALOR'
			,ID_CATALOGO_LISTA AS '@ID_CATALOGO_LISTA'
			,NB_CATALOGO_LISTA AS '@NB_CATALOGO_LISTA'
			,CASE WHEN p.CL_GENERO IS NOT NULL THEN 1 ELSE 0 END AS '@FG_SELECCIONADO'
		FROM dbo.FUNCT_CATALOGO_CATALOGOS(@IdCatalogoGenero) g
			LEFT JOIN ADM.M_PUESTO p ON g.CL_CATALOGO_VALOR = p.CL_GENERO AND p.ID_PUESTO = @PIN_ID_DESCRIPTIVO
		FOR XML PATH ('GENERO'), ROOT ('GENEROS'))

-- ESTADO CIVIL
	SELECT
		@IdCatalogoEdoCivil  = T.C.value('@ID_CATALOGO', 'int')
		FROM @XmlDatoConfiguracion.nodes('/CONFIGURACIONES/CATALOGOS/EDOCIVIL') T(C)

	SET @XML_EDOCIVIL  = (
		SELECT
			ID_CATALOGO_VALOR AS '@ID_CATALOGO_VALOR'
			,CL_CATALOGO_VALOR AS '@CL_CATALOGO_VALOR'
			,NB_CATALOGO_VALOR AS '@NB_CATALOGO_VALOR'
			,DS_CATALOGO_VALOR AS '@DS_CATALOGO_VALOR'
			,ID_CATALOGO_LISTA AS '@ID_CATALOGO_LISTA'
			,NB_CATALOGO_LISTA AS '@NB_CATALOGO_LISTA'
			,CASE WHEN p.CL_ESTADO_CIVIL IS NOT NULL THEN 1 ELSE 0 END AS '@FG_SELECCIONADO'
		FROM dbo.FUNCT_CATALOGO_CATALOGOS(@IdCatalogoEdoCivil) ec
			LEFT JOIN ADM.M_PUESTO p ON ec.CL_CATALOGO_VALOR = p.CL_ESTADO_CIVIL AND p.ID_PUESTO = @PIN_ID_DESCRIPTIVO
		FOR XML PATH ('ESTADO_CIVIL'), ROOT ('ESTADOS_CIVILES'))


-- COMPETENCIAS
	SET @XML_CATALOGO_COMPETENCIAS  = (
		SELECT
			cc.ID_COMPETENCIA AS '@ID_COMPETENCIA',
			cc.CL_COMPETENCIA AS '@CL_COMPETENCIA',
			cc.NB_COMPETENCIA AS '@NB_COMPETENCIA',
			cc.DS_COMPETENCIA AS '@DS_COMPETENCIA',
			cc.CL_TIPO_COMPETENCIA AS '@CL_TIPO_COMPETENCIA',
			cc.CL_CLASIFICACION AS '@CL_CLASIFICACION'
		FROM ADM.C_COMPETENCIA cc
			INNER JOIN ADM.S_TIPO_COMPETENCIA tp on cc.CL_TIPO_COMPETENCIA = tp.CL_TIPO_COMPETENCIA
		WHERE cc.FG_ACTIVO = 1
		FOR XML PATH ('CATALOGO_COMPETENCIA'), ROOT ('CATALOGO_COMPETENCIAS'))

-- COMPETENCIAS
	SET @XML_COMPETENCIAS  = (
		SELECT
			cc.ID_COMPETENCIA AS '@ID_COMPETENCIA',
			cc.CL_COMPETENCIA AS '@CL_COMPETENCIA',
			cc.NB_COMPETENCIA AS '@NB_COMPETENCIA',
			cc.DS_COMPETENCIA AS '@DS_COMPETENCIA',
			ISNULL(cpc.ID_PUESTO_FUNCION,0) AS '@ID_PUESTO_FUNCION',
			ISNULL(cpc.ID_PUESTO_COMPETENCIA,0) AS '@ID_PUESTO_COMPETENCIA',
			cc.CL_TIPO_COMPETENCIA AS '@CL_TIPO_COMPETENCIA',
			ISNULL(cpc.CL_TIPO_COMPETENCIA,'N/A') AS '@CL_PUESTO_TIPO_COMPETENCIA',
			tp.NB_TIPO_COMPETENCIA AS '@NB_TIPO_COMPETENCIA',
			cc.CL_CLASIFICACION AS '@CL_CLASIFICACION',
			CAST(ISNULL(cpc.ID_NIVEL_DESEADO,0) AS INT) AS '@ID_NIVEL_DESEADO',
			CAST(ISNULL(cpc.NO_VALOR_NIVEL,5) AS INT) AS '@NO_VALOR_NIVEL',
			NIVEL0.DS_NIVEL_COMPETENCIA_PUESTO AS '@DS_COMENTARIOS_NIVEL0',
			NIVEL0.ID_NIVEL_COMPETENCIA AS '@ID_NIVEL0',
			NIVEL1.DS_NIVEL_COMPETENCIA_PUESTO AS '@DS_COMENTARIOS_NIVEL1',
			NIVEL1.ID_NIVEL_COMPETENCIA AS '@ID_NIVEL1',
			NIVEL2.DS_NIVEL_COMPETENCIA_PUESTO AS '@DS_COMENTARIOS_NIVEL2',
			NIVEL2.ID_NIVEL_COMPETENCIA AS '@ID_NIVEL2',
			NIVEL3.DS_NIVEL_COMPETENCIA_PUESTO AS '@DS_COMENTARIOS_NIVEL3',
			NIVEL3.ID_NIVEL_COMPETENCIA AS '@ID_NIVEL3',
			NIVEL4.DS_NIVEL_COMPETENCIA_PUESTO AS '@DS_COMENTARIOS_NIVEL4',
			NIVEL4.ID_NIVEL_COMPETENCIA AS '@ID_NIVEL4',
			NIVEL5.DS_NIVEL_COMPETENCIA_PUESTO AS '@DS_COMENTARIOS_NIVEL5',
			NIVEL5.ID_NIVEL_COMPETENCIA AS '@ID_NIVEL5'
		FROM ADM.C_COMPETENCIA cc
			INNER JOIN ADM.S_TIPO_COMPETENCIA tp on cc.CL_TIPO_COMPETENCIA = tp.CL_TIPO_COMPETENCIA
			INNER JOIN(
				SELECT DS_NIVEL_COMPETENCIA_PUESTO, ID_NIVEL_COMPETENCIA, ID_COMPETENCIA
				FROM ADM.C_COMPETENCIA_NIVEL WHERE NO_VALOR_NIVEL = 0
			) AS NIVEL0 ON CC.ID_COMPETENCIA = NIVEL0.ID_COMPETENCIA
			INNER JOIN(
				SELECT DS_NIVEL_COMPETENCIA_PUESTO, ID_NIVEL_COMPETENCIA, ID_COMPETENCIA
				FROM ADM.C_COMPETENCIA_NIVEL WHERE NO_VALOR_NIVEL = 1
			) AS NIVEL1 ON CC.ID_COMPETENCIA = NIVEL1.ID_COMPETENCIA
			INNER JOIN(
				SELECT DS_NIVEL_COMPETENCIA_PUESTO, ID_NIVEL_COMPETENCIA, ID_COMPETENCIA
				FROM ADM.C_COMPETENCIA_NIVEL WHERE NO_VALOR_NIVEL = 2
			) AS NIVEL2 ON CC.ID_COMPETENCIA = NIVEL2.ID_COMPETENCIA
			INNER JOIN(
				SELECT DS_NIVEL_COMPETENCIA_PUESTO, ID_NIVEL_COMPETENCIA, ID_COMPETENCIA
				FROM ADM.C_COMPETENCIA_NIVEL WHERE NO_VALOR_NIVEL = 3
			) AS NIVEL3 ON CC.ID_COMPETENCIA = NIVEL3.ID_COMPETENCIA
			INNER JOIN(
				SELECT DS_NIVEL_COMPETENCIA_PUESTO, ID_NIVEL_COMPETENCIA, ID_COMPETENCIA
				FROM ADM.C_COMPETENCIA_NIVEL WHERE NO_VALOR_NIVEL = 4
			) AS NIVEL4 ON CC.ID_COMPETENCIA = NIVEL4.ID_COMPETENCIA
			INNER JOIN(
				SELECT DS_NIVEL_COMPETENCIA_PUESTO, ID_NIVEL_COMPETENCIA, ID_COMPETENCIA
				FROM ADM.C_COMPETENCIA_NIVEL WHERE NO_VALOR_NIVEL = 5
			) AS NIVEL5 ON CC.ID_COMPETENCIA = NIVEL5.ID_COMPETENCIA
			LEFT JOIN (
				SELECT pc.ID_NIVEL_DESEADO, cn.NO_VALOR_NIVEL, pc.ID_COMPETENCIA, pc.CL_TIPO_COMPETENCIA, pc.ID_PUESTO_FUNCION, pc.ID_PUESTO_COMPETENCIA
				FROM ADM.C_PUESTO_COMPETENCIA pc
					LEFT JOIN ADM.C_COMPETENCIA_NIVEL cn ON PC.ID_NIVEL_DESEADO = cn.ID_NIVEL_COMPETENCIA
				WHERE pc.ID_PUESTO = @PIN_ID_DESCRIPTIVO) cpc ON cc.ID_COMPETENCIA = cpc.ID_COMPETENCIA
		WHERE cc.FG_ACTIVO = 1 AND tp.FG_ACTIVO = 1
		FOR XML PATH ('COMPETENCIA'), ROOT ('COMPETENCIAS'))

-- AREA DE INTERES
	SET @XML_EXPERIENCIA_NECESARIA  = (
		SELECT
			CAI.ID_AREA_INTERES AS '@ID_AREA_INTERES'
			,CAI.CL_AREA_INTERES AS '@CL_AREA_INTERES'
			,CAI.NB_AREA_INTERES AS '@NB_AREA_INTERES'
			,CAI.FG_ACTIVO AS '@FG_ACTIVO'
		FROM ADM.C_AREA_INTERES CAI
		WHERE CAI.FG_ACTIVO   = 1
		FOR XML PATH ('AREA_INTERES'), ROOT ('AREAS_INTERES'))

-- AREA (DEPARTAMENTO)
	SET @XML_DEPARTAMENTO  = (
		SELECT
			d.ID_DEPARTAMENTO AS '@ID_DEPARTAMENTO',
			d.CL_DEPARTAMENTO AS '@CL_DEPARTAMENTO',
			d.NB_DEPARTAMENTO AS '@NB_DEPARTAMENTO',
			CASE WHEN p.ID_DEPARTAMENTO IS NOT NULL THEN 1 ELSE 0 END AS '@FG_SELECCIONADO'
		FROM ADM.M_DEPARTAMENTO d 
			LEFT JOIN ADM.M_PUESTO p ON d.ID_DEPARTAMENTO = p.ID_DEPARTAMENTO AND p.ID_PUESTO = @PIN_ID_DESCRIPTIVO
		WHERE d.FG_ACTIVO = 1
		FOR XML PATH ('DEPARTAMENTO'), ROOT ('DEPARTAMENTOS'))

-- CENTRO ADMINISTRATIVO
	SET @XML_CENTRO_ADMVO  = (
		SELECT
			ca.ID_CENTRO_ADMVO AS '@ID_CENTRO_ADMVO',
			ca.NB_CENTRO_ADMVO AS '@NB_CENTRO_ADMVO',
			ca.CL_CENTRO_ADMVO AS '@CL_CENTRO_ADMVO',
			CASE WHEN p.ID_CENTRO_ADMINISTRATIVO IS NOT NULL THEN 1 ELSE 0 END AS '@FG_SELECCIONADO'
		FROM ADM.C_CENTRO_ADMVO ca
			LEFT JOIN ADM.M_PUESTO p ON ca.ID_CENTRO_ADMVO = p.ID_CENTRO_ADMINISTRATIVO AND p.ID_PUESTO = @PIN_ID_DESCRIPTIVO
		FOR XML PATH ('CENTRO_ADMVO'), ROOT ('CENTROS_ADMVOS'))

-- CENTRO OPERATIVO
	SET @XML_CENTRO_OPTVO  = (
		SELECT
			co.ID_CENTRO_OPTVO AS '@ID_CENTRO_OPTVO',
			co.NB_CENTRO_OPTVO AS '@NB_CENTRO_OPTVO',
			co.CL_CENTRO_OPTVO  AS '@CL_CENTRO_OPTVO',
			CASE WHEN p.ID_CENTRO_OPERATIVO IS NOT NULL THEN 1 ELSE 0 END AS '@FG_SELECCIONADO'
		FROM ADM.C_CENTRO_OPTVO co
			LEFT JOIN ADM.M_PUESTO p ON co.ID_CENTRO_OPTVO = p.ID_CENTRO_OPERATIVO AND p.ID_PUESTO = @PIN_ID_DESCRIPTIVO
		FOR XML PATH ('CENTRO_OPTVO'), ROOT ('CENTROS_OPTVOS'))

-- PUESTOS
	SET @XML_PUESTOS = (
		SELECT
			MP.ID_PUESTO AS '@ID_PUESTO',
			MP.CL_PUESTO AS '@CL_PUESTO',
			MP.NB_PUESTO AS '@NB_PUESTO',
			MP.ID_DEPARTAMENTO AS '@ID_DEPARTAMENTO',
			ISNULL(CPR.CL_TIPO_RELACION,'') AS '@CL_TIPO_RELACION'
		FROM ADM.M_PUESTO AS MP
			LEFT OUTER JOIN ADM.C_PUESTO_RELACIONADO AS CPR ON CPR.ID_PUESTO  = MP.ID_PUESTO
		WHERE MP.FG_ACTIVO  = 1
		FOR XML PATH('PUESTO'), ROOT('PUESTOS'))

-- INDICADORES
	SET @XML_INDICADORES = (
		SELECT
			ID_INDICADOR AS '@ID_INDICADOR',
			NB_INDICADOR AS '@NB_INDICADOR'
		FROM ADM.C_INDICADOR_DESEMPENO
		FOR XML PATH('INDICADOR'), ROOT('INDICADORES'))

-- CAMPOS ADICIONALES
SET @XML_CAMPOS_ADICIONALES = (
	SELECT 
		CASE 
			WHEN ID_CATALOGO_LIST <> 0 THEN 'COMBOBOX'
			WHEN ID_CATALOGO_LIST = 0 THEN 'TEXTBOX'
		END AS '@CL_TIPO',
		FG_REQUERIDO AS '@FG_REQUERIDO',
		FG_MOSTRAR AS '@FG_HABILITADO',
		CL_CAMPO AS '@ID_CAMPO',
		CL_DIMENSION AS '@NO_LONGUITUD',
		NB_CAMPO AS '@NB_CAMPO',
		DS_CAMPO AS '@NB_TOOLTIP',
		(
			SELECT 
				cv.CL_CATALOGO_VALOR AS '@NB_VALOR',
				cv.NB_CATALOGO_VALOR AS '@NB_TEXTO'
			FROM ADM.C_CATALOGO_VALOR cv
			WHERE cv.ID_CATALOGO_LISTA = ca.ID_CATALOGO_LIST
			FOR XML PATH('ITEM'), TYPE, ROOT('ITEMS')
		) 
	FROM ADM.C_CAMPO_ADICIONAL ca
	WHERE CL_TABLA_REFERENCIA = 'M_PUESTO' AND FG_ADICIONAL = 1
	FOR XML PATH('CAMPO'), ROOT('CAMPOS_ADICIONALES'))


	SET @XML_CATALOGOS = (
		SELECT
			ISNULL(@XML_ESCOLARIDADES,'<ESCOLARIDADES></ESCOLARIDADES>'),
			ISNULL(@XML_GENEROS,'<GENEROS></GENEROS>'),
			ISNULL(@XML_EDOCIVIL,'<ESTADOS_CIVILES></ESTADOS_CIVILES>'),
			ISNULL(@XML_COMPETENCIAS,'<COMPETENCIAS></COMPETENCIAS>'),
			ISNULL(@XML_CATALOGO_COMPETENCIAS,'<CATALOGO_COMPETENCIAS></CATALOGO_COMPETENCIAS>'),
			ISNULL(@XML_EXPERIENCIA_NECESARIA,'<AREAS_INTERES></AREAS_INTERES>'),
			ISNULL(@XML_DEPARTAMENTO,'<DEPARTAMENTOS></DEPARTAMENTOS>'),
			ISNULL(@XML_CENTRO_ADMVO,'<CENTROS_ADMVOS></CENTROS_ADMVOS>'),
			ISNULL(@XML_CENTRO_OPTVO,'<CENTROS_OPTVOS></CENTROS_OPTVOS>'),
			ISNULL(@XML_PUESTOS,'<PUESTOS></PUESTOS>'),
			ISNULL(@XML_INDICADORES,'<INDICADORES></INDICADORES>'),
			ISNULL(@XML_CAMPOS_ADICIONALES,'<CAMPOS_ADICIONALES></CAMPOS_ADICIONALES>')
		FOR XML PATH('CATALOGOS'))

-- DATOS DE M_PUESTO
-- ESCOLARIDAD
	SET @XML_PUESTO_ESCOLARIDAD = (
		SELECT
			pe.ID_PUESTO_ESCOLARIDAD AS '@ID_PUESTO_ESCOLARIDAD',
			pe.ID_PUESTO AS '@ID_PUESTO',
			pe.ID_ESCOLARIDAD AS '@ID_ESCOLARIDAD',
			e.NB_ESCOLARIDAD AS '@NB_ESCOLARIDAD',
			e.CL_NIVEL_ESCOLARIDAD AS '@CL_NIVEL_ESCOLARIDAD',
			ne.CL_TIPO_ESCOLARIDAD AS '@CL_TIPO_ESCOLARIDAD'
		FROM ADM.C_PUESTO_ESCOLARIDAD pe
			INNER JOIN ADM.C_ESCOLARIDAD e ON pe.ID_ESCOLARIDAD = e.ID_ESCOLARIDAD
			INNER JOIN ADM.C_NIVEL_ESCOLARIDAD ne ON e.CL_NIVEL_ESCOLARIDAD  = ne.CL_NIVEL_ESCOLARIDAD
		WHERE pe.ID_PUESTO = @PIN_ID_DESCRIPTIVO
		FOR XML PATH('PUESTO_ESCOLARIDAD'), ROOT('PUESTO_ESCOLARIDADES'))

-- EXPERIENCIA_NECESARIA
	SET @XML_PUESTO_EXPERIENCIA = (
		SELECT
			pe.ID_PUESTO_EXPERIENCIA AS '@ID_PUESTO_EXPERIENCIA',
			pe.ID_AREA_INTERES AS '@ID_AREA_INTERES',
			pe.NO_TIEMPO AS '@NO_TIEMPO',
			pe.CL_NIVEL_REQUERIDO AS '@CL_NIVEL_REQUERIDO',
			ai.NB_AREA_INTERES AS '@NB_AREA_INTERES'
		FROM ADM.C_PUESTO_EXPERIENCIA pe
			INNER JOIN ADM.C_AREA_INTERES ai ON pe.ID_AREA_INTERES = ai.ID_AREA_INTERES
		WHERE ID_PUESTO = @PIN_ID_DESCRIPTIVO
		FOR XML PATH ('PUESTO_EXPERIENCIA'), ROOT('PUESTO_EXPERIENCIAS'))

-- PUESTOS RELACIONADOS
	SET @XML_PUESTOS_RELACIONADOS = (
		SELECT
			pr.ID_PUESTO_RELACIONADO AS '@ID_PUESTO_RELACIONADO',
			pr.CL_TIPO_RELACION AS '@CL_TIPO_RELACION',
			p.NB_PUESTO AS '@NB_PUESTO'
		FROM ADM.C_PUESTO_RELACIONADO pr
			INNER JOIN ADM.M_PUESTO p on pr.ID_PUESTO_RELACIONADO = p.ID_PUESTO
		WHERE pr.ID_PUESTO = @PIN_ID_DESCRIPTIVO
		FOR XML PATH('PUESTO_RELACIONADO'), ROOT('PUESTOS_RELACIONADOS'))

--FUNCIONES DEL PUESTO
	SET @XML_PUESTO_FUNCION = (
		SELECT
			ID_PUESTO_FUNCION AS '@ID_PUESTO_FUNCION',
			NB_PUESTO_FUNCION AS '@NB_PUESTO_FUNCION',
			ISNULL(CAST(XML_DETALLE AS NVARCHAR(max)),'') AS '@XML_DETALLE',
			ISNULL(CAST(XML_NOTAS AS NVARCHAR(max)),'') AS '@XML_NOTAS'
		FROM ADM.C_PUESTO_FUNCION pf
		WHERE ID_PUESTO = @PIN_ID_DESCRIPTIVO
		FOR XML PATH('PUESTO_FUNCION'), ROOT('PUESTO_FUNCIONES'))
	

-- INDICADORES DE LAS COMPETENCIAS DE LA FUNCION DEL PUESTO
	SET @XML_PUESTO_INDICADOR = (
		SELECT
			fi.ID_INDICADOR AS '@ID_INDICADOR',
			fi.ID_PUESTO_COMPETENCIA AS '@ID_PUESTO_COMPETENCIA',
			fi.ID_PUESTO_FUNCION AS '@ID_PUESTO_FUNCION',
			id.NB_INDICADOR AS '@NB_INDICADOR' 
		FROM ADM.C_FUNCION_INDICADOR fi
			INNER JOIN ADM.C_INDICADOR_DESEMPENO id ON fi.ID_INDICADOR = id.ID_INDICADOR
			INNER JOIN ADM.C_PUESTO_COMPETENCIA pc ON fi.ID_PUESTO_COMPETENCIA = pc.ID_PUESTO_COMPETENCIA
		WHERE pc.ID_PUESTO = @PIN_ID_DESCRIPTIVO
		FOR XML PATH('PUESTO_INDICADOR'), ROOT('PUESTO_INDICADORES'))

	
	SELECT
		@V_ID_PUESTO= ID_PUESTO,
		@V_FG_ACTIVO = FG_ACTIVO,
		@V_FE_INACTIVO = FE_INACTIVO,
		@V_CL_PUESTO = CL_PUESTO,
		@V_NB_PUESTO=NB_PUESTO,
		@V_NO_EDAD_MINIMA = NO_EDAD_MINIMA,
		@V_NO_EDAD_MAXIMA = NO_EDAD_MAXIMA,
		@V_XML_REQUERIMIENTOS = XML_REQUERIMIENTOS,
		@V_XML_OBSERVACIONES = XML_OBSERVACIONES,
		@V_XML_RESPONSABILIDAD = XML_RESPONSABILIDAD,
		@V_XML_AUTORIDAD = XML_AUTORIDAD,
		@V_XML_CURSOS_ADICIONALES = XML_CURSOS_ADICIONALES,
		@V_XML_MENTOR = XML_MENTOR,
		@V_CL_TIPO_PUESTO = CL_TIPO_PUESTO,
		@V_XML_CAMPOS_ADICIONALES = XML_CAMPOS_ADICIONALES,
		@V_ID_BITACORA = ID_BITACORA,
		@V_CL_POSICION_ORGANIGRAMA = CL_POSICION_ORGANIGRAMA,
		@V_CL_DOCUMENTO = CL_DOCUMENTO,
		@V_CL_VERSION = CL_VERSION,
		@V_FE_ELABORACION = FE_ELABORACION,
		@V_NB_ELABORO = NB_ELABORO,
		@V_FE_REVISION = FE_REVISION,
		@V_NB_REVISO = NB_REVISO,
		@V_FE_AUTORIZACION = FE_AUTORIZACION,
		@V_NB_AUTORIZO = NB_AUTORIZO,
		@V_DS_CONTROL_CAMBIOS = DS_CONTROL_CAMBIOS,
		@V_CL_TIPO_PRESTACIONES = CL_TIPO_PRESTACIONES,
		@V_XML_PRESTACIONES = XML_PRESTACIONES
	FROM ADM.M_PUESTO
	WHERE ID_PUESTO = @PIN_ID_DESCRIPTIVO
	

	SELECT
		@V_ID_PUESTO AS ID_PUESTO,
		@V_FG_ACTIVO AS FG_ACTIVO,
		@V_FE_INACTIVO AS FE_INACTIVO,
		@V_CL_PUESTO AS CL_PUESTO,
		@V_NB_PUESTO AS NB_PUESTO,
		@V_NO_EDAD_MINIMA AS NO_EDAD_MINIMA,
		@V_NO_EDAD_MAXIMA AS NO_EDAD_MAXIMA,
		@V_XML_REQUERIMIENTOS AS XML_REQUERIMIENTOS,
		@V_XML_OBSERVACIONES AS XML_OBSERVACIONES,
		@V_XML_RESPONSABILIDAD AS XML_RESPONSABILIDAD,
		@V_XML_AUTORIDAD AS XML_AUTORIDAD,
		@V_XML_CURSOS_ADICIONALES AS XML_CURSOS_ADICIONALES,
		@V_XML_MENTOR AS XML_MENTOR,
		@V_CL_TIPO_PUESTO AS CL_TIPO_PUESTO,
		@V_XML_CAMPOS_ADICIONALES AS XML_CAMPOS_ADICIONALES,
		@V_ID_BITACORA AS ID_BITACORA,
		@V_CL_POSICION_ORGANIGRAMA AS CL_POSICION_ORGANIGRAMA,
		@V_CL_DOCUMENTO AS CL_DOCUMENTO,
		@V_CL_VERSION AS CL_VERSION,
		@V_FE_ELABORACION AS FE_ELABORACION,
		@V_NB_ELABORO AS NB_ELABORO,
		@V_FE_REVISION AS FE_REVISION,
		@V_NB_REVISO AS NB_REVISO,
		@V_FE_AUTORIZACION AS FE_AUTORIZACION,
		@V_NB_AUTORIZO AS NB_AUTORIZO,
		@V_DS_CONTROL_CAMBIOS AS DS_CONTROL_CAMBIOS,
		@V_CL_TIPO_PRESTACIONES AS CL_TIPO_PRESTACIONES,
		@V_XML_PRESTACIONES AS XML_PRESTACIONES,
		ISNULL(@XML_PUESTO_ESCOLARIDAD,'<PUESTO_ESCOLARIDADES></PUESTO_ESCOLARIDADES>') AS XML_PUESTO_ESCOLARIDAD,
		ISNULL(@XML_PUESTO_EXPERIENCIA,'<PUESTO_EXPERIENCIA></PUESTO_EXPERIENCIA>') AS XML_PUESTO_EXPERIENCIA,
		ISNULL(@XML_PUESTOS_RELACIONADOS,'<XML_PUESTOS_RELACIONADOS></XML_PUESTOS_RELACIONADOS>') AS XML_PUESTOS_RELACIONADOS,
		ISNULL(@XML_PUESTO_FUNCION,'<PUESTO_FUNCIONES></PUESTO_FUNCIONES>') AS XML_PUESTO_FUNCION,
		@XML_PUESTO_COMPETENCIA AS XML_PUESTO_COMPETENCIA,
		ISNULL(@XML_PUESTO_INDICADOR, '<PUESTO_INDICADORES></PUESTO_INDICADORES>') AS XML_PUESTO_INDICADOR,
		@XML_CATALOGOS AS XML_CATALOGOS



	/*SELECT 
		ISNULL(@PIN_ID_DESCRIPTIVO,-1) AS ID_DESCRIPTIVO,
		@XML_CATALOGOS AS XML_CATALOGOS,
		@XML_PUESTO AS XML_PUESTO*/
END

--EJECUTAR EL PROCEDIMIENTO ALMACENADO FHP 
--EXECUTE ADM.SPE_OBTIENE_DESCRIPTIVO NULL