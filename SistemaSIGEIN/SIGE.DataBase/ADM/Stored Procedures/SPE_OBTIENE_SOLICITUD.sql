-- =============================================
-- Proyecto: Sistema SIGEIN 5.0
-- Copyright (c) - Acrux - 2015
-- Author: Margarita Salcedo
-- CREATE date: 14/12/2015
-- Description: Obtiene los datos de la tabla K_SOLICITUD 
-- =============================================
CREATE PROCEDURE [ADM].[SPE_OBTIENE_SOLICITUD] 
	  @PIN_ID_SOLICITUD AS int = NULL

	
AS   
BEGIN
--ONE STEP--------------------------------------------
	DECLARE @ID_CANDIDATO  INT
		, @ID_EMPLEADO INT
		, @ID_DESCRIPTIVO INT
		, @ID_REQUISICION INT
		, @CL_SOLICITUD nvarchar(20)
		, @CL_ACCESO_EVALUACION nvarchar(40)
		, @ID_PLANTILLA_SOLICITUD INT
		, @DS_COMPETENCIAS_ADICIONALES NVARCHAR(1000)
		, @XML_EMPLEADOS XML
		, @XML_DESCRIPTIVOS XML
		, @XML_REQUISICIONES XML
		, @XML_PLANTILLAS XML
		, @XML_CANDIDATOS XML
		, @XML_CATALOGOS XML
----------------------------------------------------

--SECOND STEP---------------------------------------- 
		SELECT 
		  @ID_CANDIDATO = KS.ID_CANDIDATO
		, @ID_EMPLEADO = KS.ID_EMPLEADO
		, @ID_DESCRIPTIVO = KS.ID_DESCRIPTIVO
		, @ID_REQUISICION = KS.ID_REQUISICION
		, @CL_SOLICITUD = KS.CL_SOLICITUD
		, @CL_ACCESO_EVALUACION = KS.CL_ACCESO_EVALUACION
		, @ID_PLANTILLA_SOLICITUD =KS.ID_PLANTILLA_SOLICITUD
		, @DS_COMPETENCIAS_ADICIONALES =CC.DS_COMPETENCIAS_ADICIONALES
		
	FROM ADM.K_SOLICITUD KS
	    LEFT OUTER JOIN ADM.C_CANDIDATO CC ON CC.ID_CANDIDATO = KS.ID_CANDIDATO
		LEFT OUTER JOIN ADM.M_EMPLEADO ME ON ME.ID_EMPLEADO = KS.ID_EMPLEADO
		LEFT OUTER JOIN ADM.M_PUESTO MP ON MP.ID_PUESTO = KS.ID_DESCRIPTIVO
		LEFT OUTER JOIN ADM.K_REQUISICION KR ON KR.ID_REQUISICION = KS.ID_REQUISICION
		LEFT OUTER JOIN ADM.C_EMPRESA CE ON CE.ID_EMPRESA = KR.ID_EMPRESA
	WHERE (@PIN_ID_SOLICITUD IS NULL OR (@PIN_ID_SOLICITUD IS NOT NULL AND KS.[ID_SOLICITUD] = @PIN_ID_SOLICITUD))
	--------------------------------------------------------

----THIRD STEP-----------------------------------------------		
	SET @XML_CANDIDATOS = (
		SELECT 
		  CC.[NB_CANDIDATO] + ' ' + CC.[NB_APELLIDO_PATERNO] + ' ' + CC.[NB_APELLIDO_MATERNO] AS "@NB_CANDIDATO"
		, CC.[CL_GENERO] AS "@CL_GENERO"
		, CC.[CL_RFC] AS "@CL_RFC"
		, CC.[CL_CURP] AS "@CL_CURP"
		, CC.[CL_ESTADO_CIVIL] AS "@CL_ESTADO_CIVIL"
		, CC.[NB_CONYUGUE] AS "@NB_CONYUGUE"
		, CC.[CL_NSS] AS "@CL_NSS"
		, CC.[CL_TIPO_SANGUINEO] AS "@CL_TIPO_SANGUINEO"
		, CC.[NB_PAIS] AS "@NB_PAIS"
		, CC.[NB_ESTADO] AS "@NB_ESTADO"
		, CC.[NB_MUNICIPIO] AS "@NB_MUNICIPIO"
		, CC.[NB_COLONIA] AS "@NB_COLONIA"
		, CC.[NB_CALLE] AS "@NB_CALLE"
		, CC.[NO_INTERIOR] AS "@NO_INTERIOR"
		, CC.[NO_EXTERIOR] AS "@NO_EXTERIOR"
		, CC.[CL_CODIGO_POSTAL] AS "@CL_CODIGO_POSTAL"
		, CC.[CL_CORREO_ELECTRONICO] AS "@CL_CORREO_ELECTRONICO"
		, CC.[FE_NACIMIENTO] AS "@FE_NACIMIENTO"
		, CC.[DS_LUGAR_NACIMIENTO] AS "@DS_LUGAR_NACIMIENTO"
		, CC.[MN_SUELDO] AS "@MN_SUELDO"
		, CC.[CL_NACIONALIDAD] AS "@CL_NACIONALIDAD"
		, CC.[DS_NACIONALIDAD] AS "@DS_NACIONALIDAD"
		, CC.[NB_LICENCIA] AS "@NB_LICENCIA"
		, CC.[DS_VEHICULO] AS "@DS_VEHICULO"
		, CC.[CL_CARTILLA_MILITAR] AS "@CL_CARTILLA_MILITAR"
		, CC.[CL_CEDULA_PROFESIONAL] AS "@CL_CEDULA_PROFESIONAL"
		--, CC.[XML_TELEFONOS] AS "@XML_TELEFONOS"
		--, CC.[XML_INGRESOS] AS "@XML_INGRESOS"
		--, CC.[XML_EGRESOS] AS "@XML_EGRESOS"
		--, CC.[XML_PATRIMONIO] AS "@XML_PATRIMONIO"
		, CC.[DS_DISPONIBILIDAD] AS "@DS_DISPONIBILIDAD"
		, CC.[CL_DISPONIBILIDAD_VIAJE] AS "@CL_DISPONIBILIDAD_VIAJE"
		--, CC.[XML_PERFIL_RED_SOCIAL] AS "@XML_PERFIL_RED_SOCIAL"
		, CC.[DS_COMENTARIO] AS "@DS_COMENTARIO"
		, CC.[FG_ACTIVO] AS "@FG_ACTIVO"
		FROM ADM.C_CANDIDATO CC
		WHERE (@ID_CANDIDATO IS NULL OR (@ID_CANDIDATO IS NOT NULL AND CC.ID_CANDIDATO = @ID_CANDIDATO))
		FOR XML PATH ('CANDIDATO'), ROOT ('CANDIDATOS')
	)


	SET @XML_EMPLEADOS = (
		SELECT 
		  ME.[CL_EMPLEADO]  AS "@CL_EMPLEADO"
		, ME.[NB_EMPLEADO] + ' ' + ME.[NB_APELLIDO_PATERNO] + ' ' + ME.[NB_APELLIDO_MATERNO] AS "@NB_EMPLEADO"
		, ME.[CL_ESTADO_EMPLEADO]   AS "@CL_ESTADO_EMPLEADO"
		, ME.[CL_GENERO]  AS "@CL_GENERO"
		, ME.[CL_ESTADO_CIVIL]  AS "@CL_ESTADO_CIVIL"
		, ME.[NB_CONYUGUE]  AS "@NB_CONYUGUE"
		, ME.[CL_RFC]  AS "@CL_RFC"
		, ME.[CL_CURP]  AS "@CL_CURP"
		, ME.[CL_NSS]  AS "@CL_NSS"
		, ME.[CL_TIPO_SANGUINEO]  AS "@CL_TIPO_SANGUINEO" 
		, ME.[CL_NACIONALIDAD]  AS "@CL_NACIONALIDAD"
		, ME.[NB_PAIS]  AS "@NB_PAIS"
		, ME.[NB_ESTADO]  AS "@NB_ESTADO"
		, ME.[NB_MUNICIPIO]  AS "@NB_MUNICIPIO"
		, ME.[NB_COLONIA]  AS "@NB_COLONIA"
		, ME.[NB_CALLE]  AS "@NB_CALLE"
		, ME.[NO_INTERIOR]  AS "@NO_INTERIOR"
		, ME.[NO_EXTERIOR]  AS "@NO_EXTERIOR"
		, ME.[CL_CODIGO_POSTAL]  AS "@CL_CODIGO_POSTAL"
		--, ME.[XML_TELEFONOS]  AS "@XML_TELEFONOS"
		, ME.[CL_CORREO_ELECTRONICO] AS "@CL_CORREO_ELECTRONICO" 
		, ME.[FG_ACTIVO]  AS "@FG_ACTIVO"
		, ME.[FE_NACIMIENTO] AS "@FE_NACIMIENTO"
		, ME.[DS_LUGAR_NACIMIENTO]  AS "@DS_LUGAR_NACIMIENTO"
		, ME.[FE_ALTA] AS "@FE_ALTA"
		, ME.[FE_BAJA]  AS "@FE_BAJA"
		, ME.[ID_PUESTO]  AS "@ID_PUESTO"
		, ME.[MN_SUELDO]  AS "@MN_SUELDO"
		, ME.[MN_SUELDO_VARIABLE]  AS "@MN_SUELDO_VARIABLE" 
		, ME.[DS_SUELDO_COMPOSICION]  AS "@DS_SUELDO_COMPOSICION"
		, ME.[ID_CANDIDATO]  AS "@ID_CANDIDATO"
		--, ME.[XML_CAMPOS_ADICIONALES]  AS "@XML_CAMPOS_ADICIONALES" 
		, ME.[ID_EMPRESA]  AS "@ID_EMPRESA"
		FROM ADM.M_EMPLEADO ME
		WHERE ME.ID_EMPLEADO = @ID_EMPLEADO
	--	WHERE (@ID_EMPLEADO IS NULL OR (@ID_EMPLEADO IS NOT NULL AND ME.ID_EMPLEADO = @ID_EMPLEADO))
		FOR XML PATH ('EMPLEADO'), ROOT ('EMPLEADOS')
	)



	SET @XML_DESCRIPTIVOS = (
		SELECT 
	      --P.[ID_PUESTO] AS "@",
		 P.[FG_ACTIVO] AS "@FG_ACTIVO"
		,(CASE WHEN P.[FG_ACTIVO] =1 THEN 'Sí'
		       WHEN P.[FG_ACTIVO] =0 THEN 'No'
			   END)  AS "@NB_ACTIVO"
		, P.[FE_INACTIVO]  AS "@FE_INACTIVO"
		, P.[CL_PUESTO] AS "@CL_PUESTO"
		, P.[NB_PUESTO] AS "@NB_PUESTO"
		, 0  AS "@ID_PUESTO_JEFE"
		, P.[ID_DEPARTAMENTO] AS "@ID_DEPARTAMENTO"
		--, P.[XML_CAMPOS_ADICIONALES] AS "@XML_CAMPOS_ADICIONALES"
		, P.[ID_BITACORA] AS "@ID_BITACORA"
		, P.[NO_EDAD_MINIMA] AS "@NO_EDAD_MINIMA"
		, P.[NO_EDAD_MAXIMA] AS "@NO_EDAD_MAXIMA"
		, P.[CL_GENERO] AS "@CL_GENERO"
		, P.[CL_ESTADO_CIVIL] AS "@CL_ESTADO_CIVIL"
		--, P.[XML_REQUERIMIENTOS] AS "@XML_REQUERIMIENTOS"
		--, P.[XML_OBSERVACIONES] AS "@XML_OBSERVACIONES"
		--, P.[XML_RESPONSABILIDAD] AS "@XML_RESPONSABILIDAD"
		--, P.[XML_AUTORIDAD] AS "@XML_AUTORIDAD"
		--, P.[XML_CURSOS_ADICIONALES] AS "@XML_CURSOS_ADICIONALES"
		--, P.[XML_MENTOR] AS "@XML_MENTOR"
		, P.[CL_TIPO_PUESTO] AS "@CL_TIPO_PUESTO"
		, P.[ID_CENTRO_ADMINISTRATIVO] AS "@ID_CENTRO_ADMINISTRATIVO"
		, P.[ID_CENTRO_OPERATIVO] AS "@ID_CENTRO_OPERATIVO"
		, P.[ID_PAQUETE_PRESTACIONES] AS "@ID_PAQUETE_PRESTACIONES"
		FROM ADM.M_PUESTO P
			WHERE (@ID_DESCRIPTIVO IS NULL OR (@ID_DESCRIPTIVO IS NOT NULL AND P.ID_PUESTO = @ID_DESCRIPTIVO))
		FOR XML PATH ('DESCRIPTIVO'), ROOT ('DESCRIPTIVOS')
	)


		SET @XML_REQUISICIONES = (
		SELECT 
	     -- R.ID_REQUISICION AS "@ID_REQUISICION"
		  R.NO_REQUISICION AS "@NO_REQUISICION"
		, R.FE_SOLICITUD AS "@FE_SOLICITUD"
		, R.ID_PUESTO AS "@ID_PUESTO"
		, R.CL_ESTADO AS "@CL_ESTADO"
		, R.CL_CAUSA AS "@CL_CAUSA"
		, R.DS_CAUSA AS "@DS_CAUSA"
		, R.ID_NOTIFICACION AS "@ID_NOTIFICACION"
		, R.ID_SOLICITANTE AS "@ID_SOLICITANTE"
		, R.ID_AUTORIZA AS "@ID_AUTORIZA"
		, R.ID_VISTO_BUENO AS "@ID_VISTO_BUENO"
		, R.ID_EMPRESA AS "@ID_EMPRESA"
		, R.FE_REQUERIMIENTO AS "@FE_REQUERIMIENTO"
		, E.CL_EMPRESA AS "@CL_EMPRESA"
		, E.NB_EMPRESA AS "@NB_EMPRESA"
		, E.NB_RAZON_SOCIAL AS "@NB_RAZON_SOCIAL"
		
		FROM ADM.K_REQUISICION R
		LEFT OUTER JOIN C_EMPRESA E ON E.ID_EMPRESA = R.ID_EMPRESA
			WHERE (@ID_REQUISICION IS NULL OR (@ID_REQUISICION IS NOT NULL AND R.ID_REQUISICION = @ID_REQUISICION))
		FOR XML PATH ('REQUISICION'), ROOT ('REQUISICIONES')
	)
	

	---------------------------------------------------------

---FOURTH STEP----------------------------------------------------
       SET @XML_CATALOGOS = (
		SELECT @XML_CANDIDATOS
			, @XML_EMPLEADOS
			, @XML_DESCRIPTIVOS
			, @XML_REQUISICIONES
		FOR XML PATH ('CATALOGOS')
	)

		SELECT 
		   @ID_CANDIDATO  AS  ID_CANDIDATO
		,  @ID_EMPLEADO AS ID_EMPLEADO
		,  @ID_DESCRIPTIVO AS ID_DESCRIPTIVO
		,  @ID_REQUISICION AS ID_REQUISICION
		,  @CL_SOLICITUD AS CL_SOLICITUD
		,  @CL_ACCESO_EVALUACION AS CL_ACCESO_EVALUACION
		,  @ID_PLANTILLA_SOLICITUD AS ID_PLANTILLA_SOLICITUD
		,  @DS_COMPETENCIAS_ADICIONALES  AS DS_COMPETENCIAS_ADICIONALES 
		 , @XML_CATALOGOS AS XML_CATALOGOS

END
--------------FORMA DE PROBAR EL PROCEDIMIENTO--------------------
--EXECUTE [ADM].[SPE_OBTIENE_SOLICITUD] 1