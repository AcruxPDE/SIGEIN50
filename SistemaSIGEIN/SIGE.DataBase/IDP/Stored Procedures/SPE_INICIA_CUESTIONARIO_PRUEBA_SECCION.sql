-- =============================================
-- Proyecto: Sistema SIGEIN 5.0
-- Copyright (c) - Acrux - 2015
-- Author: Juan De Dios Pérez Pedroza
-- CRETAE date: 05/01/2015
-- Description: Inicia la encuesta
-- =============================================
CREATE PROCEDURE [IDP].[SPE_INICIA_CUESTIONARIO_PRUEBA_SECCION] 
	      @XML_RESULTADO XML = '' OUT      --APLICA PARA REGRESAR UN NÚMERO 0 PARA ERROR Y 1 PARA CORRECTO
		, @PIN_ID_PRUEBA_SECCION AS int
		, @PIN_FE_INICIO_CUESTIONARIO AS DATETIME
		, @PIN_CL_USUARIO AS nvarchar(50)
		, @PIN_NB_PROGRAMA AS nvarchar(50)
AS 
BEGIN  
	--SE DECLARA E INICIALIZA LA VARIABLE QUE NOS INDICARA SI GENERAMOS LA TRANSACCION EN ESTE SP
	DECLARE @V_EXIST_TRAN BIT = 0,
			@V_CL_ESTADO NVARCHAR(20),
			@V_NO_TIEMPO INT,
			@V_FE_INICIO_ANT DATETIME;
    	BEGIN TRY
		--SE VERIFICA SI EXISTE UNA TRANSACCION EN EJECUCION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--EN CASO DE QUE NO SE INICIALIZA LA TRANSACCION
			BEGIN TRANSACTION
			--SE EDITA LA VARIABLE QUE INDICA QUE SE INICIO LA TRANSACCION EN ESTE BLOQUE PARA CANCELARLA SI ES NECESARIO
			SET @V_EXIST_TRAN = 1
		END	
	
		-- VALIDAR QUE EXISTA LA PRUEBA PARA EL CANDIDATO(CON TOKEN) O EMPLEADO Y QUE ESTE EN ESTATUS CREADA
		SELECT 
			   @V_CL_ESTADO = CL_ESTADO,
			   @V_NO_TIEMPO = NO_TIEMPO,
			   @V_FE_INICIO_ANT = FE_INICIO
		FROM IDP.K_PRUEBA_SECCION
		WHERE ID_PRUEBA_SECCION = @PIN_ID_PRUEBA_SECCION


		IF(@V_CL_ESTADO = 'CREADA')BEGIN
			--ACTUALIZAR A 'INICIADA'
			UPDATE IDP.K_PRUEBA_SECCION
				SET FE_INICIO = @PIN_FE_INICIO_CUESTIONARIO,
				    CL_ESTADO = 'INICIADA'
			WHERE ID_PRUEBA_SECCION = @PIN_ID_PRUEBA_SECCION;
			SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, 1, 'SUCCESSFUL')
			SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, CAST((@V_NO_TIEMPO*60) AS VARCHAR(4)), 'ES')
			SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Successful Process', 'EN')
		END
		ELSE IF(@V_CL_ESTADO = 'INICIADA') BEGIN
			SET @V_NO_TIEMPO = (@V_NO_TIEMPO*60)-(DATEDIFF(SECOND,@V_FE_INICIO_ANT,@PIN_FE_INICIO_CUESTIONARIO));
			SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, 2, 'SUCCESSFUL')
			SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO,CAST(@V_NO_TIEMPO AS VARCHAR(10)),'ES')
		END
		ELSE IF(@V_CL_ESTADO = 'TERMINADA') BEGIN
			SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, 0, 'ERROR')
			SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(0,'LA PRUEBA YA FUE TERMINADA')
		END
		ELSE IF(@V_CL_ESTADO = 'CANCELADA') BEGIN
			SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, 0, 'ERROR')
			SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(0,'LA PRUEBA ESTA CANCELADA')
		END
		ELSE BEGIN
			SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, 0, 'ERROR')
			SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(0,'NO EXISTE LA PRUEBA ASIGNADA')
		END		
		
		--SI SE GENERO UNA TRANSACCION EN ESTE BLOQUE LA TERMINARA
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT	
	END TRY
	BEGIN CATCH		
		--SI OCURRIO UN ERROR Y SE INICIO UNA TRANSACCION ENE ESTE BLOQUE SE CANCELARA LA TRANSACCION
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
		--SE INDICA EN LA VARIABLE DE RETORNO QUE OCURRIO UN ERROR
		--SET @POUT_CLAVE_RETORNO = 0
		--SE INSERTA EL ERROR EN LA TABLA		
		DECLARE @ERROR_CLAVE INT  = 	ERROR_NUMBER()
		DECLARE @ERROR_MENSAJE NVARCHAR(250)  = 	 ERROR_MESSAGE()
		
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, @ERROR_CLAVE, 'ERROR')
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(@ERROR_CLAVE,@ERROR_MENSAJE)
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(@ERROR_CLAVE,@ERROR_MENSAJE)			
	END CATCH
END

--EXECUTE [IDP].[SPE_INICIA_CUESTIONARIO_PRUEBA_SECCION] xml,1,GETDATE ,'admin','sqlserver' 