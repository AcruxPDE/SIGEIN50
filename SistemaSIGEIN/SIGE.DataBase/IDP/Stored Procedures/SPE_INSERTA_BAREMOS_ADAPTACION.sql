-- =============================================
-- Proyecto: Sistema SIGEIN 5.0
-- Copyright (c) - Acrux - 2015
-- Author: Gabriel Vázquez
-- CREATE date: 18/01/2016
-- Description: inserción de variables de baremos de prueba ADAPTACION
-- =============================================
CREATE PROCEDURE [IDP].[SPE_INSERTA_BAREMOS_ADAPTACION]
	 @PIN_ID_BATERIA AS INT
	,@PIN_CL_USUARIO_APP AS NVARCHAR(50)
	,@PIN_NB_PROGRAMA AS NVARCHAR(50)

AS
BEGIN  
	--SE DECLARA E INICIALIZA LA VARIABLE QUE NOS INDICARA SI GENERAMOS LA TRANSACCION EN ESTE SP
	DECLARE @V_EXIST_TRAN BIT = 0,
			@V_FE_SISTEMA AS DATETIME = GETDATE()

	DECLARE @V_ID_CUESTIONARIO AS INT

	--SE VERIFICA SI SE INSERTA EL REGISTRO O SE ACTUALIZARA SEGUN LA VARIABLE DE TIPO DE TRANSACCION  QUE RECIBE EL SP
		
	SELECT @V_ID_CUESTIONARIO = ID_CUESTIONARIO_BAREMOS
	FROM IDP.K_BATERIA_PRUEBA
	WHERE ID_BATERIA = @PIN_ID_BATERIA

	; WITH T_VALORES AS (
		SELECT 'ADAPTACION_RES_0009' AS CL_VARIABLE_RESULTADO, 0 AS NO_POSICION UNION ALL
		SELECT 'ADAPTACION_RES_0010' AS CL_VARIABLE_RESULTADO, 1 AS NO_POSICION UNION ALL
		SELECT 'ADAPTACION_RES_0011' AS CL_VARIABLE_RESULTADO, 2 AS NO_POSICION UNION ALL
		SELECT 'ADAPTACION_RES_0012' AS CL_VARIABLE_RESULTADO, 3 AS NO_POSICION UNION ALL
		SELECT 'ADAPTACION_RES_0013' AS CL_VARIABLE_RESULTADO, 4 AS NO_POSICION UNION ALL
		SELECT 'ADAPTACION_RES_0014' AS CL_VARIABLE_RESULTADO, 5 AS NO_POSICION UNION ALL
		SELECT 'ADAPTACION_RES_0015' AS CL_VARIABLE_RESULTADO, 6 AS NO_POSICION UNION ALL
		SELECT 'ADAPTACION_RES_0016' AS CL_VARIABLE_RESULTADO, 7 AS NO_POSICION)
		, T_RESULTADOS AS (
		SELECT TV.CL_VARIABLE_RESULTADO, TV.NO_POSICION, KR.NO_VALOR
		FROM T_VALORES TV
			INNER JOIN IDP.C_VARIABLE CV ON TV.CL_VARIABLE_RESULTADO = CV.CL_VARIABLE
			INNER JOIN IDP.K_RESULTADO KR ON CV.ID_VARIABLE  = KR.ID_VARIABLE
			INNER JOIN ADM.K_CUESTIONARIO KC ON KR.ID_CUESTIONARIO = KC.ID_CUESTIONARIO
			INNER JOIN IDP.K_PRUEBA KP ON KC.ID_CUESTIONARIO = KP.ID_CUESTIONARIO
		WHERE KP.ID_BATERIA = @PIN_ID_BATERIA
	)
		, T_BAREMOS AS (
		SELECT 'AP-PRODUCTIVIDAD'			AS CL_VARIABLE, 0 AS NO_POSICION, 2 AS NO_VALOR_BUSCADO UNION ALL
		SELECT 'AP-EMPUJE'					AS CL_VARIABLE, 1 AS NO_POSICION, 3 AS NO_VALOR_BUSCADO UNION ALL
		SELECT 'AP-SOCIABILIDAD'			AS CL_VARIABLE, 2 AS NO_POSICION, 4 AS NO_VALOR_BUSCADO UNION ALL
		SELECT 'AP-CREATIVIDAD'				AS CL_VARIABLE, 3 AS NO_POSICION, 5 AS NO_VALOR_BUSCADO UNION ALL
		SELECT 'AP-PACIENCIA'				AS CL_VARIABLE, 4 AS NO_POSICION, 1 AS NO_VALOR_BUSCADO UNION ALL
		SELECT 'AP-ENERGÍA'					AS CL_VARIABLE, 5 AS NO_POSICION, 6 AS NO_VALOR_BUSCADO UNION ALL
		SELECT 'AP-PARTICIPACIÓN'			AS CL_VARIABLE, 6 AS NO_POSICION, 0 AS NO_VALOR_BUSCADO UNION ALL
		SELECT 'AP-AUTOESTIMA Y SEGURIDAD'	AS CL_VARIABLE, 7 AS NO_POSICION, 7 AS NO_VALOR_BUSCADO
	)
		INSERT INTO [IDP].[K_RESULTADO]([CL_TIPO_RESULTADO],[ID_VARIABLE],[NO_VALOR],[ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA])
		SELECT 4 AS CL_TIPO_RESULTADO, CV.ID_VARIABLE, [IDP].[F_OBTIENE_VALORES_BAREMOS](6, tr.NO_POSICION, tb.CL_VARIABLE), @V_ID_CUESTIONARIO, @V_FE_SISTEMA, @PIN_CL_USUARIO_APP, @PIN_NB_PROGRAMA --* , [IDP].[F_OBTIENE_VALORES_BAREMOS](6, tr.NO_POSICION, tb.CL_VARIABLE)
		FROM T_BAREMOS TB
			INNER JOIN IDP.C_VARIABLE CV ON TB.CL_VARIABLE = CV.CL_VARIABLE
			INNER JOIN T_RESULTADOS TR ON TB.NO_VALOR_BUSCADO = TR.NO_VALOR


END


