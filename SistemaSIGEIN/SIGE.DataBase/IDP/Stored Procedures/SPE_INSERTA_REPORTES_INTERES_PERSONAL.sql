-- =============================================
-- Proyecto: Sistema SIGEIN 5.0
-- Copyright (c) - Acrux - 2015
-- Author: Juan De Dios Pérez Pedroza
-- CREATE date: 18/01/2016
-- Description: Variables correspondientes a las respuestas de las pruebas
-- =============================================
CREATE PROCEDURE [IDP].[SPE_INSERTA_REPORTES_INTERES_PERSONAL]
	@XML_RESULTADO XML = '' OUT      --APLICA PARA REGRESAR UN NÚMERO 0 PARA ERROR Y 1 PARA CORRECTO
	,@PIN_XML_RESULTADOS AS XML
	,@PIN_ID_CUESTIONARIO AS INT
	,@PIN_ID_PRUEBA AS INT
	,@PIN_CL_USUARIO_APP AS NVARCHAR(50)
	,@PIN_NB_PROGRAMA AS NVARCHAR(50)

AS
BEGIN  
	--SE DECLARA E INICIALIZA LA VARIABLE QUE NOS INDICARA SI GENERAMOS LA TRANSACCION EN ESTE SP
	DECLARE @V_EXIST_TRAN BIT = 0,
	@PIN_T DECIMAL(7,2) =0,
	@PIN_E DECIMAL(7,2) =0,
	@PIN_A DECIMAL(7,2) =0,
	@PIN_S DECIMAL(7,2) =0,
	@PIN_P DECIMAL(7,2) =0,
	@PIN_R DECIMAL(7,2) =0,
	@PIN_TS DECIMAL(7,2) =0
    	BEGIN TRY
		--SE VERIFICA SI EXISTE UNA TRANSACCION EN EJECUCION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--EN CASO DE QUE NO SE INICIALIZA LA TRANSACCION
			BEGIN TRANSACTION
			--SE EDITA LA VARIABLE QUE INDICA QUE SE INICIO LA TRANSACCION EN ESTE BLOQUE PARA CANCELARLA SI ES NECESARIO
			SET @V_EXIST_TRAN = 1
		END	

		 ---------------------------------------------RESULTADOS DE APLICACION---------------------------------------------
	
	IF @PIN_ID_CUESTIONARIO IS NOT NULL
	BEGIN
		SELECT @PIN_T =
			(SELECT
							SUM(KR.NO_VALOR) AS RESULTADO_T
							FROM IDP.K_RESULTADO kr
							JOIN IDP.C_VARIABLE cv ON kr.ID_VARIABLE = cv.ID_VARIABLE
					        WHERE 
							kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO AND (
							cv.CL_VARIABLE = 'INTERES_RES_A6' OR
							cv.CL_VARIABLE = 'INTERES_RES_B2' OR
							cv.CL_VARIABLE = 'INTERES_RES_C2' OR
							cv.CL_VARIABLE = 'INTERES_RES_D2' OR
							cv.CL_VARIABLE = 'INTERES_RES_E5' OR
							cv.CL_VARIABLE = 'INTERES_RES_F1' OR
							cv.CL_VARIABLE = 'INTERES_RES_G6' OR
							cv.CL_VARIABLE = 'INTERES_RES_H5' OR
							cv.CL_VARIABLE = 'INTERES_RES_I3' OR
							cv.CL_VARIABLE = 'INTERES_RES_J1') 
					)

		SELECT @PIN_E =
			(SELECT
							SUM(KR.NO_VALOR) AS RESULTADO_T
							FROM IDP.K_RESULTADO kr
							JOIN IDP.C_VARIABLE cv ON kr.ID_VARIABLE = cv.ID_VARIABLE
					        WHERE
							kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO AND ( 
							cv.CL_VARIABLE = 'INTERES_RES_A4' OR
							cv.CL_VARIABLE = 'INTERES_RES_B5' OR
							cv.CL_VARIABLE = 'INTERES_RES_C4' OR
							cv.CL_VARIABLE = 'INTERES_RES_D3' OR
							cv.CL_VARIABLE = 'INTERES_RES_E4' OR
							cv.CL_VARIABLE = 'INTERES_RES_F5' OR
							cv.CL_VARIABLE = 'INTERES_RES_G3' OR
							cv.CL_VARIABLE = 'INTERES_RES_H3' OR
							cv.CL_VARIABLE = 'INTERES_RES_I3' OR
							cv.CL_VARIABLE = 'INTERES_RES_J4' 
					))

				SELECT @PIN_A =
			(SELECT
							SUM(KR.NO_VALOR) AS RESULTADO_T
							FROM IDP.K_RESULTADO kr
							JOIN IDP.C_VARIABLE cv ON kr.ID_VARIABLE = cv.ID_VARIABLE
					        WHERE 
							kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO AND (
							cv.CL_VARIABLE = 'INTERES_RES_A3' OR
							cv.CL_VARIABLE = 'INTERES_RES_B6' OR
							cv.CL_VARIABLE = 'INTERES_RES_C5' OR
							cv.CL_VARIABLE = 'INTERES_RES_D1' OR
							cv.CL_VARIABLE = 'INTERES_RES_E6' OR
							cv.CL_VARIABLE = 'INTERES_RES_F4' OR
							cv.CL_VARIABLE = 'INTERES_RES_G5' OR
							cv.CL_VARIABLE = 'INTERES_RES_H4' OR
							cv.CL_VARIABLE = 'INTERES_RES_I5' OR
							cv.CL_VARIABLE = 'INTERES_RES_J2' 
					))


				SELECT @PIN_S =
			(SELECT
							SUM(KR.NO_VALOR) AS RESULTADO_T
							FROM IDP.K_RESULTADO kr
							JOIN IDP.C_VARIABLE cv ON kr.ID_VARIABLE = cv.ID_VARIABLE
					        WHERE 
							kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO AND (
							cv.CL_VARIABLE = 'INTERES_RES_A5' OR
							cv.CL_VARIABLE = 'INTERES_RES_B4' OR
							cv.CL_VARIABLE = 'INTERES_RES_C1' OR
							cv.CL_VARIABLE = 'INTERES_RES_D6' OR
							cv.CL_VARIABLE = 'INTERES_RES_E2' OR
							cv.CL_VARIABLE = 'INTERES_RES_F6' OR
							cv.CL_VARIABLE = 'INTERES_RES_G2' OR
							cv.CL_VARIABLE = 'INTERES_RES_H1' OR
							cv.CL_VARIABLE = 'INTERES_RES_I1' OR
							cv.CL_VARIABLE = 'INTERES_RES_J3' 
					))

				SELECT @PIN_P =
			(SELECT
			                SUM(KR.NO_VALOR) AS RESULTADO_T
							FROM IDP.K_RESULTADO kr
							JOIN IDP.C_VARIABLE cv ON kr.ID_VARIABLE = cv.ID_VARIABLE
					        WHERE 
							kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO AND (
							cv.CL_VARIABLE = 'INTERES_RES_A1' OR
							cv.CL_VARIABLE = 'INTERES_RES_B1' OR
							cv.CL_VARIABLE = 'INTERES_RES_C3' OR
							cv.CL_VARIABLE = 'INTERES_RES_D4' OR
							cv.CL_VARIABLE = 'INTERES_RES_E3' OR
							cv.CL_VARIABLE = 'INTERES_RES_F2' OR
							cv.CL_VARIABLE = 'INTERES_RES_G1' OR
							cv.CL_VARIABLE = 'INTERES_RES_H3' OR
							cv.CL_VARIABLE = 'INTERES_RES_I4' OR
							cv.CL_VARIABLE = 'INTERES_RES_J5' 
					))

				SELECT @PIN_R =
			   (SELECT
						    SUM(KR.NO_VALOR) AS RESULTADO_T
							FROM IDP.K_RESULTADO kr
							JOIN IDP.C_VARIABLE cv ON kr.ID_VARIABLE = cv.ID_VARIABLE
							WHERE 
							kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO AND (
							cv.CL_VARIABLE = 'INTERES_RES_A2' OR
							cv.CL_VARIABLE = 'INTERES_RES_B3' OR
							cv.CL_VARIABLE = 'INTERES_RES_C6' OR
							cv.CL_VARIABLE = 'INTERES_RES_D5' OR
							cv.CL_VARIABLE = 'INTERES_RES_E1' OR
							cv.CL_VARIABLE = 'INTERES_RES_F3' OR
							cv.CL_VARIABLE = 'INTERES_RES_G4' OR
							cv.CL_VARIABLE = 'INTERES_RES_H6' OR
							cv.CL_VARIABLE = 'INTERES_RES_I6' OR
							cv.CL_VARIABLE = 'INTERES_RES_J6' 
					)
					)
				SELECT @PIN_TS = @PIN_T + @PIN_E + @PIN_A +@PIN_S +@PIN_P +@PIN_R

			  INSERT INTO [IDP].[K_RESULTADO] ([CL_TIPO_RESULTADO] ,[ID_VARIABLE] ,[NO_VALOR], [ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA])
			  VALUES (3,1128,(@PIN_T/60)*100, @PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
			 (3,1129,(@PIN_E/60), @PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
			 (3,1130,(@PIN_A/60), @PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
			 (3,1131,(@PIN_S/60)*100, @PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
			 (3,1132,(@PIN_P/60)*100, @PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
			 (3,1133,(@PIN_R/60)*100, @PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
			 (3,1134,@PIN_TS, @PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA)
		-------------------------------------------------------------------------------------------
		END


		--SE DEVUELVE LA VARIABLE DE RETORNO INDICANDO QUE TODO SE REALIZO CORRECTAMENTE
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Proceso exitoso', 'ES')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Successful Process', 'EN')
		--SI SE GENERO UNA TRANSACCION EN ESTE BLOQUE LA TERMINARA
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT
	END TRY
	BEGIN CATCH
		--SI OCURRIO UN ERROR Y SE INICIO UNA TRANSACCION ENE ESTE BLOQUE SE CANCELARA LA TRANSACCION
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
		--SE INDICA EN LA VARIABLE DE RETORNO QUE OCURRIO UN ERROR
		--SET @POUT_CLAVE_RETORNO = 0
		--SE INSERTA EL ERROR EN LA TABLA
		DECLARE @ERROR_CLAVE INT  = ERROR_NUMBER()
		DECLARE @ERROR_MENSAJE NVARCHAR(250)  = ERROR_MESSAGE()
		
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, @ERROR_CLAVE, 'ERROR')
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(@ERROR_CLAVE,@ERROR_MENSAJE)
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(@ERROR_CLAVE,@ERROR_MENSAJE)			
	END CATCH
END


