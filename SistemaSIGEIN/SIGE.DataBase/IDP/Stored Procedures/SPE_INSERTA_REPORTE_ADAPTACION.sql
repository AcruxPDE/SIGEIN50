-- =============================================
-- Proyecto: SIGEIN 5.0
-- Copyright (c) - Acrux - 2015
-- Author: Gabriel vázquez
-- CRETAE date: 04/02/2016
-- Description: Inserta variables de respuesta de la prueba Aptitud metal 1
-- =============================================
CREATE PROCEDURE [IDP].[SPE_INSERTA_REPORTE_ADAPTACION]
	 @XML_RESULTADO XML = '' OUT 
	,@PIN_ID_CUESTIONARIO AS INT = NULL
	,@PIN_CL_USUARIO_APP AS nvarchar(50)
	,@PIN_NB_PROGRAMA AS nvarchar(50)
	AS
BEGIN  
	--SE DECLARA E INICIALIZA LA VARIABLE QUE NOS INDICARA SI GENERAMOS LA TRANSACCION EN ESTE SP
	DECLARE @V_EXIST_TRAN BIT = 0,
			@V_FE_SISTEMA AS DATETIME = GETDATE()
	
		BEGIN TRY
		--SE VERIFICA SI EXISTE UNA TRANSACCION EN EJECUCION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--EN CASO DE QUE NO SE INICIALIZA LA TRANSACCION
			BEGIN TRANSACTION
			--SE EDITA LA VARIABLE QUE INDICA QUE SE INICIO LA TRANSACCION EN ESTE BLOQUE PARA CANCELARLA SI ES NECESARIO
			SET @V_EXIST_TRAN = 1
		END	
		--SE VERIFICA SI SE INSERTA EL REGISTRO O SE ACTUALIZARA SEGUN LA VARIABLE DE TIPO DE TRANSACCION  QUE RECIBE EL SP
			
		DECLARE @V_NO_POS AS INT,
			@V_NO_NEG AS INT,
			@V_NO_DESC_POS_NEG AS INT
		
		DECLARE @T_VALORES TABLE(NO_VALOR INT)

		DELETE FROM IDP.K_RESULTADO WHERE ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO AND CL_TIPO_RESULTADO = 3


		;WITH T_POSICIONES AS  (
		SELECT 1 AS NO_PRUEBA, 0 AS NO_POSICION, 'ADAPTACION_RES_0001' AS CL_VARIABLE UNION ALL
		SELECT 1 AS NO_PRUEBA, 1 AS NO_POSICION, 'ADAPTACION_RES_0002' AS CL_VARIABLE UNION ALL
		SELECT 1 AS NO_PRUEBA, 2 AS NO_POSICION, 'ADAPTACION_RES_0003' AS CL_VARIABLE UNION ALL
		SELECT 1 AS NO_PRUEBA, 3 AS NO_POSICION, 'ADAPTACION_RES_0004' AS CL_VARIABLE UNION ALL
		SELECT 1 AS NO_PRUEBA, 4 AS NO_POSICION, 'ADAPTACION_RES_0005' AS CL_VARIABLE UNION ALL
		SELECT 1 AS NO_PRUEBA, 5 AS NO_POSICION, 'ADAPTACION_RES_0006' AS CL_VARIABLE UNION ALL
		SELECT 1 AS NO_PRUEBA, 6 AS NO_POSICION, 'ADAPTACION_RES_0007' AS CL_VARIABLE UNION ALL
		SELECT 1 AS NO_PRUEBA, 7 AS NO_POSICION, 'ADAPTACION_RES_0008' AS CL_VARIABLE UNION ALL
		SELECT 2 AS NO_PRUEBA, 0 AS NO_POSICION, 'ADAPTACION_RES_0009' AS CL_VARIABLE UNION ALL
		SELECT 2 AS NO_PRUEBA, 1 AS NO_POSICION, 'ADAPTACION_RES_0010' AS CL_VARIABLE UNION ALL
		SELECT 2 AS NO_PRUEBA, 2 AS NO_POSICION, 'ADAPTACION_RES_0011' AS CL_VARIABLE UNION ALL
		SELECT 2 AS NO_PRUEBA, 3 AS NO_POSICION, 'ADAPTACION_RES_0012' AS CL_VARIABLE UNION ALL
		SELECT 2 AS NO_PRUEBA, 4 AS NO_POSICION, 'ADAPTACION_RES_0013' AS CL_VARIABLE UNION ALL
		SELECT 2 AS NO_PRUEBA, 5 AS NO_POSICION, 'ADAPTACION_RES_0014' AS CL_VARIABLE UNION ALL
		SELECT 2 AS NO_PRUEBA, 6 AS NO_POSICION, 'ADAPTACION_RES_0015' AS CL_VARIABLE UNION ALL
		SELECT 2 AS NO_PRUEBA, 7 AS NO_POSICION, 'ADAPTACION_RES_0016' AS CL_VARIABLE
		), T_VARIABLES_REPORTE AS
		(
			SELECT 1 AS NO_PRUEBA, 0 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_P0' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 1 AS NO_PRUEBA, 1 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_P1' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 1 AS NO_PRUEBA, 2 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_P2' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 1 AS NO_PRUEBA, 3 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_P3' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 1 AS NO_PRUEBA, 4 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_P4' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 1 AS NO_PRUEBA, 5 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_P5' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 1 AS NO_PRUEBA, 6 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_P6' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 1 AS NO_PRUEBA, 7 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_P7' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 0 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_A0' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 1 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_A1' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 2 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_A2' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 3 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_A3' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 4 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_A4' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 5 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_A5' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 6 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_A6' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 7 AS NO_POSICION_REPORTE, 'ADAPTACION_REP_A7' AS CL_VARIABLE_REPORTE

		),T_VALORES AS(
			SELECT TP.NO_PRUEBA, TP.NO_POSICION, CV.CL_VARIABLE, KR.NO_VALOR, CL_VARIABLE_REPORTE, VR.ID_VARIABLE AS  ID_VARIABLE_REPORTE, NO_POSICION_REPORTE
			FROM T_POSICIONES TP
				INNER JOIN IDP.C_VARIABLE CV ON TP.CL_VARIABLE = CV.CL_VARIABLE		
				INNER JOIN IDP.K_RESULTADO KR ON CV.ID_VARIABLE = KR.ID_VARIABLE
				INNER JOIN T_VARIABLES_REPORTE TVR ON TP.NO_PRUEBA = TVR.NO_PRUEBA AND CAST(KR.NO_VALOR AS INT) = TVR.NO_POSICION_REPORTE
				INNER JOIN IDP.C_VARIABLE VR ON TVR.CL_VARIABLE_REPORTE =  VR.CL_VARIABLE
			WHERE KR.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO

		)  ,T_CALIFICACION AS (

			SELECT 0 AS NO_FILA, 90 AS NO_UP, 10 AS NO_DOWN UNION ALL
			SELECT 1 AS NO_FILA, 80 AS NO_UP, 20 AS NO_DOWN UNION ALL
			SELECT 2 AS NO_FILA, 70 AS NO_UP, 30 AS NO_DOWN UNION ALL
			SELECT 3 AS NO_FILA, 60 AS NO_UP, 40 AS NO_DOWN UNION ALL
			SELECT 4 AS NO_FILA, 40 AS NO_UP, 60 AS NO_DOWN UNION ALL
			SELECT 5 AS NO_FILA, 30 AS NO_UP, 70 AS NO_DOWN UNION ALL
			SELECT 6 AS NO_FILA, 20 AS NO_UP, 80 AS NO_DOWN UNION ALL
			SELECT 7 AS NO_FILA, 10 AS NO_UP, 90 AS NO_DOWN
		)

		INSERT INTO [IDP].[K_RESULTADO]([CL_TIPO_RESULTADO],[ID_VARIABLE],[NO_VALOR],[ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA])
		SELECT 3 AS CL_TIPO_RESULTADO, TV.ID_VARIABLE_REPORTE, CASE WHEN TV.NO_VALOR IN (1,2,3,4,5) THEN TC.NO_UP WHEN TV.NO_VALOR IN (6,7,0) THEN TC.NO_DOWN END AS NO_RESULTADO, @PIN_ID_CUESTIONARIO, @V_FE_SISTEMA, @PIN_CL_USUARIO_APP, @PIN_NB_PROGRAMA
		FROM T_VALORES TV
			INNER JOIN T_CALIFICACION TC ON TV.NO_POSICION = TC.NO_FILA


		
		;WITH T_VARIABLES1 AS
		(
			SELECT 1 AS NO_PRUEBA, 0 AS NO_POSICION, 'ADAPTACION_RES_0001' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 1 AS NO_PRUEBA, 1 AS NO_POSICION, 'ADAPTACION_RES_0002' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 1 AS NO_PRUEBA, 2 AS NO_POSICION, 'ADAPTACION_RES_0003' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 1 AS NO_PRUEBA, 3 AS NO_POSICION, 'ADAPTACION_RES_0004' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 1 AS NO_PRUEBA, 4 AS NO_POSICION, 'ADAPTACION_RES_0005' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 1 AS NO_PRUEBA, 5 AS NO_POSICION, 'ADAPTACION_RES_0006' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 1 AS NO_PRUEBA, 6 AS NO_POSICION, 'ADAPTACION_RES_0007' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 1 AS NO_PRUEBA, 7 AS NO_POSICION, 'ADAPTACION_RES_0008' AS CL_VARIABLE_REPORTE
		), T_VARIABLES2 AS
		( 
			SELECT 2 AS NO_PRUEBA, 0 AS NO_POSICION, 'ADAPTACION_RES_0009' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 1 AS NO_POSICION, 'ADAPTACION_RES_0010' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 2 AS NO_POSICION, 'ADAPTACION_RES_0011' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 3 AS NO_POSICION, 'ADAPTACION_RES_0012' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 4 AS NO_POSICION, 'ADAPTACION_RES_0013' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 5 AS NO_POSICION, 'ADAPTACION_RES_0014' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 6 AS NO_POSICION, 'ADAPTACION_RES_0015' AS CL_VARIABLE_REPORTE UNION ALL
			SELECT 2 AS NO_PRUEBA, 7 AS NO_POSICION, 'ADAPTACION_RES_0016' AS CL_VARIABLE_REPORTE
		)
		, T_PRESONALIDAD AS
		(
			SELECT TV.NO_POSICION, CV.ID_VARIABLE, CV.CL_VARIABLE, KR.NO_VALOR
			FROM T_VARIABLES1 TV
				INNER JOIN IDP.C_VARIABLE CV ON TV.CL_VARIABLE_REPORTE = CV.CL_VARIABLE
				INNER JOIN IDP.K_RESULTADO KR ON CV.ID_VARIABLE = KR.ID_VARIABLE
			WHERE KR.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO
		), T_ADAPTACION AS (

			SELECT TV.NO_POSICION, CV.ID_VARIABLE, CV.CL_VARIABLE, KR.NO_VALOR
			FROM T_VARIABLES2 TV
				INNER JOIN IDP.C_VARIABLE CV ON TV.CL_VARIABLE_REPORTE = CV.CL_VARIABLE
				INNER JOIN IDP.K_RESULTADO KR ON CV.ID_VARIABLE = KR.ID_VARIABLE
			WHERE KR.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO

		), T_RESULTADOS AS (
			SELECT  (TA.NO_POSICION - TP.NO_POSICION) AS NO_RESULTADO
			FROM T_PRESONALIDAD TP
				INNER JOIN T_ADAPTACION TA ON TP.NO_VALOR = TA.NO_VALOR
		)
			INSERT INTO @T_VALORES
			SELECT NO_RESULTADO FROM T_RESULTADOS WHERE NO_RESULTADO <> 0


			SET @V_NO_POS = (SELECT SUM(NO_VALOR) FROM @T_VALORES WHERE NO_VALOR > 0)
			SET @V_NO_NEG = (SELECT SUM(NO_VALOR) FROM @T_VALORES WHERE NO_VALOR < 0)

			INSERT INTO [IDP].[K_RESULTADO]([CL_TIPO_RESULTADO],[ID_VARIABLE],[NO_VALOR],[ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA])
			SELECT 3 AS CL_TIPO_RESULTADO, ID_VARIABLE, @V_NO_POS, @PIN_ID_CUESTIONARIO, @V_FE_SISTEMA, @PIN_CL_USUARIO_APP, @PIN_NB_PROGRAMA FROM IDP.C_VARIABLE WHERE CL_VARIABLE = 'ADAPTACION_REP_POS'

			INSERT INTO [IDP].[K_RESULTADO]([CL_TIPO_RESULTADO],[ID_VARIABLE],[NO_VALOR],[ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA])
			SELECT 3 AS CL_TIPO_RESULTADO, ID_VARIABLE, @V_NO_NEG, @PIN_ID_CUESTIONARIO, @V_FE_SISTEMA, @PIN_CL_USUARIO_APP, @PIN_NB_PROGRAMA FROM IDP.C_VARIABLE WHERE CL_VARIABLE = 'ADAPTACION_REP_NEG'

			SET @V_NO_DESC_POS_NEG = CASE
										WHEN @V_NO_POS = 0 AND @V_NO_NEG = 0 THEN 1 -- Optimo riguidez
										WHEN @V_NO_POS = 1 AND @V_NO_NEG = -1 THEN 2 -- Movilidad ideal
										WHEN (@V_NO_POS = 2 AND @V_NO_NEG = -2) OR (@V_NO_POS = 3 AND @V_NO_NEG = -3) THEN 3 -- Movilidad esperada
										ELSE 0 END

			INSERT INTO [IDP].[K_RESULTADO]([CL_TIPO_RESULTADO],[ID_VARIABLE],[NO_VALOR],[ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA])
			SELECT 3 AS CL_TIPO_RESULTADO, ID_VARIABLE, @V_NO_DESC_POS_NEG, @PIN_ID_CUESTIONARIO, @V_FE_SISTEMA, @PIN_CL_USUARIO_APP, @PIN_NB_PROGRAMA FROM IDP.C_VARIABLE WHERE CL_VARIABLE = 'ADAPTACION_REP_DESC'
			


		--SE DEVUELVE LA VARIABLE DE RETORNO INDICANDO QUE TODO SE REALIZO CORRECTAMENTE
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Proceso exitoso', 'ES')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Successful Process', 'EN')
		--SI SE GENERO UNA TRANSACCION EN ESTE BLOQUE LA TERMINARA
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT
	END TRY
	BEGIN CATCH
		--SI OCURRIO UN ERROR Y SE INICIO UNA TRANSACCION ENE ESTE BLOQUE SE CANCELARA LA TRANSACCION
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
		--SE INDICA EN LA VARIABLE DE RETORNO QUE OCURRIO UN ERROR
		--SET @POUT_CLAVE_RETORNO = 0
		--SE INSERTA EL ERROR EN LA TABLA
		DECLARE @ERROR_CLAVE INT  = ERROR_NUMBER()
		DECLARE @ERROR_MENSAJE NVARCHAR(250)  = ERROR_MESSAGE()
		
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, @ERROR_CLAVE, 'ERROR')
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(@ERROR_CLAVE,@ERROR_MENSAJE)
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(@ERROR_CLAVE,@ERROR_MENSAJE)			
	END CATCH
END


