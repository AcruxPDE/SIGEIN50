-- =============================================
-- Proyecto: SIGEIN 5.0
-- Copyright (c) - Acrux - 2015
-- Author: Juan De Dios Pérez Pedroza
-- CRETAE date: 20/01/2016
-- Description: Inserta variables de respuesta de la prueba Laboral II
-- =============================================
CREATE PROCEDURE [IDP].[SPE_INSERTA_REPORTE_LABORAL2]
	 @XML_RESULTADO XML = '' OUT 
	,@PIN_ID_CUESTIONARIO AS INT
	,@PIN_CL_USUARIO_APP AS nvarchar(50)
    ,@PIN_NB_PROGRAMA AS nvarchar(50)
	AS
BEGIN  
	--SE DECLARA E INICIALIZA LA VARIABLE QUE NOS INDICARA SI GENERAMOS LA TRANSACCION EN ESTE SP
	DECLARE @V_EXIST_TRAN BIT = 0
	, @PIN_DA_APF DECIMAL(5,2) = 0
	, @PIN_TM_CTF DECIMAL(5,2) = 0
	, @PIN_MT_CSF DECIMAL(5,2) = 0
	, @PIN_AD_NGF DECIMAL(5,2) = 0

	, @PIN_DA_APD DECIMAL(5,2) = 0
	, @PIN_TM_CTD DECIMAL(5,2) = 0
	, @PIN_MT_CSD DECIMAL(5,2) = 0
	, @PIN_AD_NGD DECIMAL(5,2) = 0
	
	, @PIN_TOTALF DECIMAL(5,2) = 0
	, @PIN_TOTALD DECIMAL(5,2) = 0

	--DA/AP	TM/CT	MT/CS	AD/NG

    	BEGIN TRY
		--SE VERIFICA SI EXISTE UNA TRANSACCION EN EJECUCION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--EN CASO DE QUE NO SE INICIALIZA LA TRANSACCION
			BEGIN TRANSACTION
			--SE EDITA LA VARIABLE QUE INDICA QUE SE INICIO LA TRANSACCION EN ESTE BLOQUE PARA CANCELARLA SI ES NECESARIO
			SET @V_EXIST_TRAN = 1
		END	
		--SE VERIFICA SI SE INSERTA EL REGISTRO O SE ACTUALIZARA SEGUN LA VARIABLE DE TIPO DE TRANSACCION  QUE RECIBE EL SP
			
			IF @PIN_ID_CUESTIONARIO IS NOT NULL
			BEGIN
			DECLARE @V_ID_DESCRIPCION_TOTAL AS INT,
					@V_ID_DESCRIPCION_CI AS INT,
					@V_NO_TOTAL AS INT,
					@V_NO_CI AS INT,
					@FAVORABLE INT,
					@DESFAVORABLE INT

			DECLARE @FE_SISTEMA DATETIME = GETDATE()
			DELETE IDP.K_RESULTADO WHERE ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO AND CL_TIPO_RESULTADO = 3

			-------------------------------------------------------------------------------------------------------------------------
				SELECT @PIN_DA_APF = 
				(SELECT SUM (ISNULL(NO_VALOR,0)) FROM IDP.K_RESULTADO kr INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE=kr.ID_VARIABLE   
				WHERE
				 (
				 cv.CL_VARIABLE='LABORAL2-RES-0001' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0005' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0009'
				 ) AND (kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO))


				 
				SELECT @PIN_TM_CTF = 
				(SELECT SUM (ISNULL(NO_VALOR,0)) FROM IDP.K_RESULTADO kr INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE=kr.ID_VARIABLE   
				WHERE
				 (
				 cv.CL_VARIABLE='LABORAL2-RES-0002' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0006' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0010'
				 ) AND (kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO))

				 SELECT @PIN_MT_CSF = 
				(SELECT SUM (ISNULL(NO_VALOR,0)) FROM IDP.K_RESULTADO kr INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE=kr.ID_VARIABLE   
				WHERE
				 (
				 cv.CL_VARIABLE='LABORAL2-RES-0003' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0007' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0011'
				 ) AND (kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO))

				SELECT @PIN_AD_NGF = 
				(SELECT SUM (ISNULL(NO_VALOR,0)) FROM IDP.K_RESULTADO kr INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE=kr.ID_VARIABLE   
				WHERE
				 (
				 cv.CL_VARIABLE='LABORAL2-RES-0004' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0008' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0012'
				 ) AND (kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO))

				 ----------------------------------------------------FAVORABLES--------------------------------------------------------------------------
				SELECT @PIN_DA_APD = 
				(SELECT SUM (ISNULL(NO_VALOR,0)) FROM IDP.K_RESULTADO kr INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE=kr.ID_VARIABLE   
				WHERE
				 (
				 cv.CL_VARIABLE='LABORAL2-RES-0013' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0017' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0021'
				 ) AND (kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO))

				SELECT @PIN_TM_CTD = 
				(SELECT SUM (ISNULL(NO_VALOR,0)) FROM IDP.K_RESULTADO kr INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE=kr.ID_VARIABLE   
				WHERE
				 (
				 cv.CL_VARIABLE='LABORAL2-RES-0014' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0018' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0022'
				 ) AND (kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO))

				 SELECT @PIN_MT_CSD = 
				(SELECT SUM (ISNULL(NO_VALOR,0)) FROM IDP.K_RESULTADO kr INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE=kr.ID_VARIABLE   
				WHERE
				 (
				 cv.CL_VARIABLE='LABORAL2-RES-0015' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0019' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0023'
				 ) AND (kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO))

				SELECT @PIN_AD_NGD = 
				(SELECT SUM (ISNULL(NO_VALOR,0)) FROM IDP.K_RESULTADO kr INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE=kr.ID_VARIABLE   
				WHERE
				 (
				 cv.CL_VARIABLE='LABORAL2-RES-0016' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0020' OR
				 cv.CL_VARIABLE='LABORAL2-RES-0024'
				 ) AND (kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO))

				 ----------------------------------------------------DESFAVORABLES--------------------------------------------------------------------------

			    SELECT @PIN_TOTALF =  @PIN_DA_APF + @PIN_TM_CTF + @PIN_MT_CSF + @PIN_AD_NGF 
			    SELECT @PIN_TOTALD =  @PIN_DA_APD + @PIN_TM_CTD + @PIN_MT_CSD + @PIN_AD_NGD

				DECLARE @ID_MAX_FAVORABLE INT =0
				DECLARE @ID_MAX_DESFAVORABLE INT =0
				 
				  SELECT @ID_MAX_FAVORABLE = F.ID_VARIABLE 
				  FROM
				  (SELECT MAX(NO_VALOR) AS VALOR, ID_VARIABLE FROM IDP.K_RESULTADO 
				   WHERE ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO AND 
				   (ID_VARIABLE =1181 OR
				   ID_VARIABLE =1182 OR
				   ID_VARIABLE =1183 OR
				   ID_VARIABLE =1184)
				  GROUP BY ID_VARIABLE) F
				   
			  	SET @FAVORABLE = CASE
											WHEN @ID_MAX_FAVORABLE = 1181 THEN 1
											WHEN @ID_MAX_FAVORABLE = 1182 THEN 2
											WHEN @ID_MAX_FAVORABLE = 1183 THEN 3
											WHEN @ID_MAX_FAVORABLE = 1184 THEN 4
											ELSE 0 END

				SET @ID_MAX_FAVORABLE = (SELECT D.ID_VARIABLE FROM 
				 (SELECT MAX(NO_VALOR) AS VALOR, ID_VARIABLE FROM IDP.K_RESULTADO
				  WHERE ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO AND 
				  (ID_VARIABLE =1185 OR
				  ID_VARIABLE =1186 OR
				  ID_VARIABLE =1187 OR
				  ID_VARIABLE =1188)
				  GROUP BY ID_VARIABLE) AS D
				   )

			  	SET @DESFAVORABLE = CASE
											WHEN @ID_MAX_FAVORABLE = 1185 THEN 1
											WHEN @ID_MAX_FAVORABLE = 1186 THEN 2
											WHEN @ID_MAX_FAVORABLE = 1187 THEN 3
											WHEN @ID_MAX_FAVORABLE = 1188 THEN 4
											ELSE 0 END

				INSERT INTO [IDP].[K_RESULTADO]([CL_TIPO_RESULTADO],[ID_VARIABLE],[NO_VALOR],[ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA])
		        VALUES 
				(3,1181,@PIN_DA_APF,@PIN_ID_CUESTIONARIO,@FE_SISTEMA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
				(3,1182,@PIN_TM_CTF,@PIN_ID_CUESTIONARIO,@FE_SISTEMA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
				(3,1183,@PIN_MT_CSF,@PIN_ID_CUESTIONARIO,@FE_SISTEMA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
				(3,1184,@PIN_AD_NGF,@PIN_ID_CUESTIONARIO,@FE_SISTEMA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
				
				(3,1185,@PIN_DA_APD,@PIN_ID_CUESTIONARIO,@FE_SISTEMA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
				(3,1186,@PIN_TM_CTD,@PIN_ID_CUESTIONARIO,@FE_SISTEMA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
				(3,1187,@PIN_MT_CSD,@PIN_ID_CUESTIONARIO,@FE_SISTEMA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
				(3,1188,@PIN_AD_NGD,@PIN_ID_CUESTIONARIO,@FE_SISTEMA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
				
				(3,1189,@PIN_TOTALF,@PIN_ID_CUESTIONARIO,@FE_SISTEMA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
				(3,1190,@PIN_TOTALD,@PIN_ID_CUESTIONARIO,@FE_SISTEMA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),

				(3,1314,@FAVORABLE,@PIN_ID_CUESTIONARIO,@FE_SISTEMA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
				(3,1315,@DESFAVORABLE,@PIN_ID_CUESTIONARIO,@FE_SISTEMA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA)
		  --   1181 'LABORAL2-REP-DAAPF'
		  --   1182 'LABORAL2-REP-TMCTF'
		  --  1183'LABORAL2-REP-MTCSF'
		  --  1184'LABORAL2-REP-ADNGF'
		  --  1185'LABORAL2-REP-DAAPD'
		  --  1186'LABORAL2-REP-TMCTD'
		  --  1187'LABORAL2-REP-MTCSD'
		  --  1188'LABORAL2-REP-ADNGD'
		  --  1189'LABORAL2-REP-TOTALF'
		  --  1190 'LABORAL2-REP-AD-TOTALD'
		  --  1314 'LABORAL2-REP-AD-FAV'
		  --  1315 'LABORAL2-REP-AD-DESFAV'

			END

		--SE DEVUELVE LA VARIABLE DE RETORNO INDICANDO QUE TODO SE REALIZO CORRECTAMENTE
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Proceso exitoso', 'ES')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Successful Process', 'EN')
		--SI SE GENERO UNA TRANSACCION EN ESTE BLOQUE LA TERMINARA
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT
	END TRY
	BEGIN CATCH
		--SI OCURRIO UN ERROR Y SE INICIO UNA TRANSACCION ENE ESTE BLOQUE SE CANCELARA LA TRANSACCION
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
		--SE INDICA EN LA VARIABLE DE RETORNO QUE OCURRIO UN ERROR
		--SET @POUT_CLAVE_RETORNO = 0
		--SE INSERTA EL ERROR EN LA TABLA
		DECLARE @ERROR_CLAVE INT  = ERROR_NUMBER()
		DECLARE @ERROR_MENSAJE NVARCHAR(250)  = ERROR_MESSAGE()
		
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, @ERROR_CLAVE, 'ERROR')
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(@ERROR_CLAVE,@ERROR_MENSAJE)
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(@ERROR_CLAVE,@ERROR_MENSAJE)			
	END CATCH
END


