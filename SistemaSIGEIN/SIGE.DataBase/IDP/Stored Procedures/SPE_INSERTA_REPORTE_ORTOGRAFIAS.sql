-- =============================================
-- Proyecto: Sistema SIGEIN 5.0
-- Copyright (c) - Acrux - 2015
-- Author: Juan De Dios Pérez Pedroza
-- CREATE date: 01/02/2016
-- Description: Variables correspondientes a las respuestas de las pruebas
-- =============================================
CREATE PROCEDURE [IDP].[SPE_INSERTA_REPORTE_ORTOGRAFIAS]
	@XML_RESULTADO XML = '' OUT      --APLICA PARA REGRESAR UN NÚMERO 0 PARA ERROR Y 1 PARA CORRECTO
	,@XML_RESPUESTAS XML
	,@PIN_ID_PRUEBA AS INT
	,@PIN_ID_CUESTIONARIO AS INT
	,@PIN_NB_PRUEBA AS NVARCHAR(20)
	,@PIN_CL_USUARIO_APP AS NVARCHAR(50)
	,@PIN_NB_PROGRAMA AS NVARCHAR(50)

AS
BEGIN  
	--SE DECLARA E INICIALIZA LA VARIABLE QUE NOS INDICARA SI GENERAMOS LA TRANSACCION EN ESTE SP
	DECLARE @V_EXIST_TRAN BIT = 0,
	@PIN_ORTOGRAFIAI DECIMAL(5,2) =0,
	@PIN_ORTOGRAFIAII DECIMAL(5,2) =0,
	@PIN_ORTOGRAFIAIII DECIMAL(5,2) =0,
	@PIN_TOTAL DECIMAL(5,2) =0,
	@PIN_TOTAL_ACIERTOS DECIMAL(5,2) =0
    	BEGIN TRY
		--SE VERIFICA SI EXISTE UNA TRANSACCION EN EJECUCION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--EN CASO DE QUE NO SE INICIALIZA LA TRANSACCION
			BEGIN TRANSACTION
			--SE EDITA LA VARIABLE QUE INDICA QUE SE INICIO LA TRANSACCION EN ESTE BLOQUE PARA CANCELARLA SI ES NECESARIO
			SET @V_EXIST_TRAN = 1
		END	
		 ---------------------------------------------RESULTADOS DE APLICACION---------------------------------------------
	
	IF @PIN_ID_CUESTIONARIO IS NOT NULL
	BEGIN

	IF @PIN_NB_PRUEBA = 'ORTOGRAFIA-1'
	   BEGIN
				SELECT @PIN_TOTAL = 
				(SELECT ISNULL(NO_VALOR,0) FROM IDP.K_RESULTADO kr INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE=kr.ID_VARIABLE   
				WHERE cv.CL_VARIABLE='ORTOGRAFIA1-RES-01' AND kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO)
	  	 
		   DELETE FROM IDP.K_RESULTADO 
	          WHERE ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO AND CL_TIPO_RESULTADO = 3
		  
		  INSERT INTO [IDP].[K_RESULTADO] ([CL_TIPO_RESULTADO] ,[ID_VARIABLE] ,[NO_VALOR], [ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA])
			  VALUES 
			 (3,1161,(@PIN_TOTAL/40)*100, @PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
			 (3,1162,(@PIN_TOTAL), @PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA)
	  
	   END
			
	

		IF @PIN_NB_PRUEBA = 'ORTOGRAFIA-2'
	   BEGIN
				SELECT @PIN_TOTAL = 
				(SELECT ISNULL(NO_VALOR,0) FROM IDP.K_RESULTADO kr INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE=kr.ID_VARIABLE   
				WHERE cv.CL_VARIABLE='ORTOGRAFIA2-RES-01' AND kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO)
	  	 
		  DELETE FROM IDP.K_RESULTADO 
	          WHERE ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO AND CL_TIPO_RESULTADO = 3

		  INSERT INTO [IDP].[K_RESULTADO] ([CL_TIPO_RESULTADO] ,[ID_VARIABLE] ,[NO_VALOR], [ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA])
			  VALUES 
			 (3,1163,(@PIN_TOTAL/25)*100, @PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
			 (3,1164,(@PIN_TOTAL), @PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA)
	   END


	   	IF @PIN_NB_PRUEBA = 'ORTOGRAFIA-3'
	   BEGIN
				SELECT @PIN_TOTAL = 
				(SELECT ISNULL(NO_VALOR,0) FROM IDP.K_RESULTADO kr INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE=kr.ID_VARIABLE   
				WHERE cv.CL_VARIABLE='ORTOGRAFIA3-RES-01' AND kr.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO)
	  	 

		 	  DELETE FROM IDP.K_RESULTADO 
	          WHERE ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO AND CL_TIPO_RESULTADO = 3
		      
			  INSERT INTO [IDP].[K_RESULTADO] ([CL_TIPO_RESULTADO] ,[ID_VARIABLE] ,[NO_VALOR], [ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA])
			  VALUES 
			 (3,1165,(@PIN_TOTAL/18)*100, @PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
			 (3,1166,(@PIN_TOTAL), @PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA)
	   END

	END

		---------------------------------------CAPTURA MANUAL--------------------------------------------------
		------------------------------------------------------------------------------------------------------

		IF @PIN_ID_CUESTIONARIO IS NULL
		BEGIN 
		------------------------------------------ORTOGRAFIA-I-----------------------------------------------------------
		SELECT @PIN_ORTOGRAFIAI = res.NO_VALOR_RESPUESTA,
		       @PIN_ID_CUESTIONARIO =res.ID_CUESTIONARIO
		 FROM
		(                  SELECT
							    KP.ID_CUESTIONARIO,
								d.value('@NO_VALOR', 'INT') AS NO_VALOR_RESPUESTA
							FROM @XML_RESPUESTAS.nodes('RESULTADOS/RESULTADO') AS T(d)
							INNER JOIN IDP.K_PRUEBA KP ON KP.ID_PRUEBA = d.value('@ID_PRUEBA', 'INT')
							INNER JOIN IDP.K_RESULTADO KR ON KP.ID_CUESTIONARIO = KR.ID_CUESTIONARIO
							INNER JOIN IDP.C_PRUEBA CP ON CP.ID_PRUEBA = KP.ID_PRUEBA_PLANTILLA
							WHERE CL_PRUEBA = 'ORTOGRAFIA-1'

					) AS res
		INSERT INTO [IDP].[K_RESULTADO] ([CL_TIPO_RESULTADO] ,[ID_VARIABLE] ,[NO_VALOR], [ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA])
		VALUES (3,1161,(@PIN_ORTOGRAFIAI/40)*100,@PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
		       (3,1162,@PIN_ORTOGRAFIAI,@PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA)
			
		------------------------------------------ORTOGRAFIA-II-----------------------------------------------------------

			SELECT @PIN_ORTOGRAFIAII = res.NO_VALOR_RESPUESTA,
		       @PIN_ID_CUESTIONARIO =res.ID_CUESTIONARIO
		 FROM
		(                  SELECT
							    KP.ID_CUESTIONARIO,
								d.value('@NO_VALOR', 'INT') AS NO_VALOR_RESPUESTA
							FROM @XML_RESPUESTAS.nodes('RESULTADOS/RESULTADO') AS T(d)
							INNER JOIN IDP.K_PRUEBA KP ON KP.ID_PRUEBA = d.value('@ID_PRUEBA', 'INT')
							INNER JOIN IDP.K_RESULTADO KR ON KP.ID_CUESTIONARIO = KR.ID_CUESTIONARIO
							INNER JOIN IDP.C_PRUEBA CP ON CP.ID_PRUEBA = KP.ID_PRUEBA_PLANTILLA
							WHERE CL_PRUEBA = 'ORTOGRAFIA-2'

					) AS res
		INSERT INTO [IDP].[K_RESULTADO] ([CL_TIPO_RESULTADO] ,[ID_VARIABLE] ,[NO_VALOR], [ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA])
		VALUES (3,1163,(@PIN_ORTOGRAFIAII/25)*100,@PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
		       (3,1164,@PIN_ORTOGRAFIAII,@PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA)
		
				------------------------------------------ORTOGRAFIA-III-----------------------------------------------------------

			SELECT @PIN_ORTOGRAFIAIII = res.NO_VALOR_RESPUESTA,
		       @PIN_ID_CUESTIONARIO =res.ID_CUESTIONARIO
		 FROM
		(                  SELECT
							    KP.ID_CUESTIONARIO,
								d.value('@NO_VALOR', 'INT') AS NO_VALOR_RESPUESTA
							FROM @XML_RESPUESTAS.nodes('RESULTADOS/RESULTADO') AS T(d)
							INNER JOIN IDP.K_PRUEBA KP ON KP.ID_PRUEBA = d.value('@ID_PRUEBA', 'INT')
							INNER JOIN IDP.K_RESULTADO KR ON KP.ID_CUESTIONARIO = KR.ID_CUESTIONARIO
							INNER JOIN IDP.C_PRUEBA CP ON CP.ID_PRUEBA = KP.ID_PRUEBA_PLANTILLA
							WHERE CL_PRUEBA = 'ORTOGRAFIA-3'

					) AS res
		INSERT INTO [IDP].[K_RESULTADO] ([CL_TIPO_RESULTADO] ,[ID_VARIABLE] ,[NO_VALOR], [ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA])
		VALUES (3,1163,(@PIN_ORTOGRAFIAIII/18)*100,@PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA),
		       (3,1164,@PIN_ORTOGRAFIAIII,@PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA)

		END
		---------------------------FIN CAPTURA MANUAL---------------------------------------------------------------------------


		--SE DEVUELVE LA VARIABLE DE RETORNO INDICANDO QUE TODO SE REALIZO CORRECTAMENTE
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Proceso exitoso', 'ES')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Successful Process', 'EN')
		--SI SE GENERO UNA TRANSACCION EN ESTE BLOQUE LA TERMINARA
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT
	END TRY
	BEGIN CATCH
		--SI OCURRIO UN ERROR Y SE INICIO UNA TRANSACCION ENE ESTE BLOQUE SE CANCELARA LA TRANSACCION
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
		--SE INDICA EN LA VARIABLE DE RETORNO QUE OCURRIO UN ERROR
		--SET @POUT_CLAVE_RETORNO = 0
		--SE INSERTA EL ERROR EN LA TABLA
		DECLARE @ERROR_CLAVE INT  = ERROR_NUMBER()
		DECLARE @ERROR_MENSAJE NVARCHAR(250)  = ERROR_MESSAGE()
		
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, @ERROR_CLAVE, 'ERROR')
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(@ERROR_CLAVE,@ERROR_MENSAJE)
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(@ERROR_CLAVE,@ERROR_MENSAJE)			
	END CATCH
END


