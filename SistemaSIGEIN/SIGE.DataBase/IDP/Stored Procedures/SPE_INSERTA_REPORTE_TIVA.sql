-- =============================================
-- Proyecto: SIGEIN 5.0
-- Copyright (c) - Acrux - 2015
-- Author: Juan De Dios Pérez Pedroza
-- CRETAE date: 01/02/2016
-- Description: Inserta variables de respuesta de la prueba TIVA
-- =============================================
CREATE PROCEDURE [IDP].[SPE_INSERTA_REPORTE_TIVA]
	 @XML_RESULTADO XML = '' OUT 
	,@PIN_ID_CUESTIONARIO AS INT = NULL
	,@PIN_CL_USUARIO_APP AS nvarchar(50)
    ,@PIN_NB_PROGRAMA AS nvarchar(50)
	AS
BEGIN  
	--SE DECLARA E INICIALIZA LA VARIABLE QUE NOS INDICARA SI GENERAMOS LA TRANSACCION EN ESTE SP
	DECLARE @V_EXIST_TRAN BIT = 0
    	BEGIN TRY
		--SE VERIFICA SI EXISTE UNA TRANSACCION EN EJECUCION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--EN CASO DE QUE NO SE INICIALIZA LA TRANSACCION
			BEGIN TRANSACTION
			--SE EDITA LA VARIABLE QUE INDICA QUE SE INICIO LA TRANSACCION EN ESTE BLOQUE PARA CANCELARLA SI ES NECESARIO
			SET @V_EXIST_TRAN = 1
		END	
		--SE VERIFICA SI SE INSERTA EL REGISTRO O SE ACTUALIZARA SEGUN LA VARIABLE DE TIPO DE TRANSACCION  QUE RECIBE EL SP
			
			DECLARE @V_INDICE_IP AS DECIMAL(5,2),
					@V_INDICE_ALR AS DECIMAL(5,2),
					@V_INDICE_IEL AS DECIMAL(5,2),
					@V_INDICE_IC AS DECIMAL(5,2),
					@V_INDICE_GI AS DECIMAL(5,2)

			DECLARE @FE_SISTEMA DATETIME = GETDATE()

		

			DELETE K_RESULTADO WHERE ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO AND CL_TIPO_RESULTADO = 3


			IF @PIN_ID_CUESTIONARIO IS NOT NULL
			BEGIN 
			SELECT @V_INDICE_IP = (SELECT SUM(ISNULL(NO_VALOR,0)) FROM IDP.K_RESULTADO kr
									INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE = kr.ID_VARIABLE
									where (
									cv.CL_VARIABLE ='TIVA_RES_1' OR
									cv.CL_VARIABLE ='TIVA_RES_4' OR 
									cv.CL_VARIABLE ='TIVA_RES_6' OR 
									cv.CL_VARIABLE ='TIVA_RES_9' OR 
									cv.CL_VARIABLE ='TIVA_RES_14' ) AND KR.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO)

		 	SELECT @V_INDICE_ALR = (SELECT SUM(ISNULL(NO_VALOR,0)) FROM IDP.K_RESULTADO kr
									INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE = kr.ID_VARIABLE
									where 
									(
									cv.CL_VARIABLE ='TIVA_RES_5' OR
									cv.CL_VARIABLE ='TIVA_RES_4' OR 
									cv.CL_VARIABLE ='TIVA_RES_6' OR 
									cv.CL_VARIABLE ='TIVA_RES_9' OR 
									cv.CL_VARIABLE ='TIVA_RES_14' )AND KR.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO)
			

			
		 	SELECT @V_INDICE_IEL = (SELECT SUM(ISNULL(NO_VALOR,0)) FROM IDP.K_RESULTADO kr
									INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE = kr.ID_VARIABLE
									where (
									cv.CL_VARIABLE ='TIVA_RES_2' OR
									cv.CL_VARIABLE ='TIVA_RES_7' OR 
									cv.CL_VARIABLE ='TIVA_RES_11' OR 
									cv.CL_VARIABLE ='TIVA_RES_15' OR 
									cv.CL_VARIABLE ='TIVA_RES_19' )AND KR.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO)

		 SELECT @V_INDICE_IC = (SELECT SUM(ISNULL(NO_VALOR,0)) FROM IDP.K_RESULTADO kr
									INNER JOIN IDP.C_VARIABLE cv ON cv.ID_VARIABLE = kr.ID_VARIABLE
									where 
									(cv.CL_VARIABLE ='TIVA_RES_3' OR
									cv.CL_VARIABLE ='TIVA_RES_10' OR 
									cv.CL_VARIABLE ='TIVA_RES_12' OR 
									cv.CL_VARIABLE ='TIVA_RES_17' OR 
									cv.CL_VARIABLE ='TIVA_RES_20' )AND KR.ID_CUESTIONARIO = @PIN_ID_CUESTIONARIO)


			SELECT @V_INDICE_GI = @V_INDICE_IP + @V_INDICE_ALR + @V_INDICE_IEL + @V_INDICE_IC
			
			 -- 1156 'TIVA-REP_INDICE_IP'
			 -- 1157 'TIVA-REP_INDICE_ALR'
			 --1158 'TIVA-REP_INDICE_IEL'
			 --1159 ,'TIVA-REP_INDICE_IC'
		     --  1160 ,'TIVA-REP_INDICE_GI'

			INSERT INTO [IDP].[K_RESULTADO]([CL_TIPO_RESULTADO],[ID_VARIABLE],[NO_VALOR],[ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA]) SELECT 3 AS CL_TIPO_RESULTADO, 1156 AS ID_VARIABLE, (@V_INDICE_IP/15)*100, @PIN_ID_CUESTIONARIO, @FE_SISTEMA, @PIN_CL_USUARIO_APP, @PIN_NB_PROGRAMA 
			INSERT INTO [IDP].[K_RESULTADO]([CL_TIPO_RESULTADO],[ID_VARIABLE],[NO_VALOR],[ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA]) SELECT 3 AS CL_TIPO_RESULTADO, 1157 AS ID_VARIABLE, (@V_INDICE_ALR/15)*100, @PIN_ID_CUESTIONARIO, @FE_SISTEMA, @PIN_CL_USUARIO_APP, @PIN_NB_PROGRAMA 
			INSERT INTO [IDP].[K_RESULTADO]([CL_TIPO_RESULTADO],[ID_VARIABLE],[NO_VALOR],[ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA]) SELECT 3 AS CL_TIPO_RESULTADO, 1158 AS ID_VARIABLE, (@V_INDICE_IEL/15)*100, @PIN_ID_CUESTIONARIO, @FE_SISTEMA, @PIN_CL_USUARIO_APP, @PIN_NB_PROGRAMA 
			INSERT INTO [IDP].[K_RESULTADO]([CL_TIPO_RESULTADO],[ID_VARIABLE],[NO_VALOR],[ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA]) SELECT 3 AS CL_TIPO_RESULTADO, 1159 AS ID_VARIABLE, (@V_INDICE_IC/15)*100, @PIN_ID_CUESTIONARIO, @FE_SISTEMA, @PIN_CL_USUARIO_APP, @PIN_NB_PROGRAMA 
			INSERT INTO [IDP].[K_RESULTADO]([CL_TIPO_RESULTADO],[ID_VARIABLE],[NO_VALOR],[ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA]) SELECT 3 AS CL_TIPO_RESULTADO, 1160 AS ID_VARIABLE, (@V_INDICE_GI/60)*100, @PIN_ID_CUESTIONARIO, @FE_SISTEMA, @PIN_CL_USUARIO_APP, @PIN_NB_PROGRAMA 
			END
-------------------------------------------------------AYUDA---------------------------------------------------------------
--TIVA_RES_1 @V_INDICE_IP
--TIVA_RES_2	@V_INDICE_IEL
--TIVA_RES_3		@V_INDICE_IC
--TIVA_RES_4 @V_INDICE_IP
--TIVA_RES_5			@V_INDICE_ALR
--TIVA_RES_6 @V_INDICE_IP
--TIVA_RES_7	@V_INDICE_IEL
--TIVA_RES_8			@V_INDICE_ALR
--TIVA_RES_9 @V_INDICE_IP
--TIVA_RES_10		@V_INDICE_IC
--TIVA_RES_11	@V_INDICE_IEL
--TIVA_RES_12		@V_INDICE_IC
--TIVA_RES_13			@V_INDICE_ALR
--TIVA_RES_14 @V_INDICE_IP
--TIVA_RES_15	@V_INDICE_IEL
--TIVA_RES_16			@V_INDICE_ALR
--TIVA_RES_17		@V_INDICE_IC
--TIVA_RES_18			@V_INDICE_ALR
--TIVA_RES_19	@V_INDICE_IEL
--TIVA_RES_20		@V_INDICE_IC
----------------------------------------------------------------------------------------------------------------------
		

		--SE DEVUELVE LA VARIABLE DE RETORNO INDICANDO QUE TODO SE REALIZO CORRECTAMENTE
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Proceso exitoso', 'ES')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Successful Process', 'EN')
		--SI SE GENERO UNA TRANSACCION EN ESTE BLOQUE LA TERMINARA
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT
	END TRY
	BEGIN CATCH
		--SI OCURRIO UN ERROR Y SE INICIO UNA TRANSACCION ENE ESTE BLOQUE SE CANCELARA LA TRANSACCION
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
		--SE INDICA EN LA VARIABLE DE RETORNO QUE OCURRIO UN ERROR
		--SET @POUT_CLAVE_RETORNO = 0
		--SE INSERTA EL ERROR EN LA TABLA
		DECLARE @ERROR_CLAVE INT  = ERROR_NUMBER()
		DECLARE @ERROR_MENSAJE NVARCHAR(250)  = ERROR_MESSAGE()
		
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, @ERROR_CLAVE, 'ERROR')
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(@ERROR_CLAVE,@ERROR_MENSAJE)
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(@ERROR_CLAVE,@ERROR_MENSAJE)			
	END CATCH
END


