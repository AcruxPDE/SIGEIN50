-- =============================================
-- Proyecto: Sistema SIGEIN 5.0
-- Copyright (c) - Acrux - 2015
-- Author: Juan De Dios Pérez Pedroza
-- CREATE date: 22/01/2016
-- Description: Insercion de variables de la pruebas de Ortografía
-- =============================================
CREATE PROCEDURE [IDP].[SPE_INSERTA_RESULTADOS_ORTOGRAFIAS]
	@XML_RESULTADO XML = '' OUT      --APLICA PARA REGRESAR UN NÚMERO 0 PARA ERROR Y 1 PARA CORRECTO
	,@PIN_XML_RESULTADOS AS XML
	,@PIN_ID_CUESTIONARIO AS INT 
	,@PIN_ID_PRUEBA AS INT
	,@PIN_NB_PRUEBA AS NVARCHAR(20)
	,@PIN_CL_USUARIO_APP AS NVARCHAR(50)
	,@PIN_NB_PROGRAMA AS NVARCHAR(50)

AS
BEGIN  
	--SE DECLARA E INICIALIZA LA VARIABLE QUE NOS INDICARA SI GENERAMOS LA TRANSACCION EN ESTE SP
	DECLARE @V_EXIST_TRAN BIT = 0,
	        @RESPUESTAS_CORRECTAS INT =0
    	BEGIN TRY
		--SE VERIFICA SI EXISTE UNA TRANSACCION EN EJECUCION
		IF (@@TRANCOUNT = 0) 
		BEGIN
			--EN CASO DE QUE NO SE INICIALIZA LA TRANSACCION
			BEGIN TRANSACTION
			--SE EDITA LA VARIABLE QUE INDICA QUE SE INICIO LA TRANSACCION EN ESTE BLOQUE PARA CANCELARLA SI ES NECESARIO
			SET @V_EXIST_TRAN = 1
		END	
		--SE VERIFICA SI SE INSERTA EL REGISTRO O SE ACTUALIZARA SEGUN LA VARIABLE DE TIPO DE TRANSACCION  QUE RECIBE EL SP
	
		IF @PIN_ID_CUESTIONARIO IS NULL 
		BEGIN

			INSERT INTO [IDP].[K_RESULTADO] ([CL_TIPO_RESULTADO] ,[ID_VARIABLE] ,[NO_VALOR], [ID_CUESTIONARIO],[FE_CREACION],[CL_USUARIO_APP_CREA],[NB_PROGRAMA_CREA])
					SELECT 2, res.ID_VARIABLE, res.NO_VALOR_RESPUESTA, res.ID_CUESTIONARIO, GETDATE(),@PIN_CL_USUARIO_APP, @PIN_NB_PROGRAMA
					FROM (
							SELECT
							    KP.ID_CUESTIONARIO,
								d.value('@ID_VARIABLE', 'INT') AS ID_VARIABLE,
								d.value('@NO_VALOR', 'INT') AS NO_VALOR_RESPUESTA
							FROM @PIN_XML_RESULTADOS.nodes('RESULTADOS/RESULTADO') AS T(d)
							JOIN IDP.K_PRUEBA KP ON KP.ID_PRUEBA = d.value('@ID_PRUEBA', 'INT')
					) AS res

					
							-------------------------------ACTUALIZA EL ESTADO DE LA PRUEBA A TERMINADA-----------------------------------
				  UPDATE KP SET
				  KP.[CL_ESTADO] ='TERMINADO',
				  KP.[FE_TERMINO] =GETDATE()
				, [FE_MODIFICACION] = GETDATE()
				, [CL_USUARIO_APP_MODIFICA] = 'sqlserver'
				, [NB_PROGRAMA_MODIFICA] = 'Ortografias Manual'
			     FROM IDP.K_PRUEBA KP
				 INNER JOIN @PIN_XML_RESULTADOS.nodes('/RESULTADOS/RESULTADO') tbl(COLUMNA) ON
				  COLUMNA.value('@ID_PRUEBA', 'INT') = KP.ID_PRUEBA;

	    EXEC  [IDP].[SPE_INSERTA_REPORTE_ORTOGRAFIAS] @XML_RESULTADO, @PIN_XML_RESULTADOS,NULL,NULL,'',@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA
		END
 --------------------------------- ---------------------------------------------------------------------
		IF @PIN_ID_CUESTIONARIO IS NOT NULL 
		BEGIN
		-----------------------------------------------------------------------------------------------------------
			IF  @PIN_NB_PRUEBA = 'ORTOGRAFIA-1' 
			BEGIN 

				SELECT
						@RESPUESTAS_CORRECTAS =SUM(COLUMNA.value('@NO_VALOR_RESPUESTA', 'INT'))
						FROM @PIN_XML_RESULTADOS.nodes('/RESPUESTAS/RESPUESTA') tbl(COLUMNA)
						INNER JOIN IDP.C_VARIABLE v ON COLUMNA.value('@CL_PREGUNTA', 'NVARCHAR(20)') = v.CL_VARIABLE


			INSERT INTO [IDP].[K_RESULTADO]
			([CL_TIPO_RESULTADO],
			[ID_VARIABLE],
			[NO_VALOR],
			[ID_CUESTIONARIO],
			[FE_CREACION],
			[CL_USUARIO_APP_CREA],
			[NB_PROGRAMA_CREA])
			
		    VALUES (2,862,@RESPUESTAS_CORRECTAS,@PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA)
	        EXEC  [IDP].[SPE_INSERTA_REPORTE_ORTOGRAFIAS] @XML_RESULTADO, @PIN_XML_RESULTADOS,NULL,@PIN_ID_CUESTIONARIO,@PIN_NB_PRUEBA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA
				
			END
			
		-------------------------------------------------------------------------------------------------------------
			IF  @PIN_NB_PRUEBA = 'ORTOGRAFIA-2' 
			BEGIN 

					    SELECT
						@RESPUESTAS_CORRECTAS =SUM(COLUMNA.value('@NO_VALOR_RESPUESTA', 'INT'))
						FROM @PIN_XML_RESULTADOS.nodes('/RESPUESTAS/RESPUESTA') tbl(COLUMNA)
						INNER JOIN IDP.C_VARIABLE v ON COLUMNA.value('@CL_PREGUNTA', 'NVARCHAR(20)') = v.CL_VARIABLE


			INSERT INTO [IDP].[K_RESULTADO]
			([CL_TIPO_RESULTADO],
			[ID_VARIABLE],
			[NO_VALOR],
			[ID_CUESTIONARIO],
			[FE_CREACION],
			[CL_USUARIO_APP_CREA],
			[NB_PROGRAMA_CREA])
			
		    VALUES (2,863,@RESPUESTAS_CORRECTAS,@PIN_ID_CUESTIONARIO, GETDATE(),@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA)
	        EXEC  [IDP].[SPE_INSERTA_REPORTE_ORTOGRAFIAS] @XML_RESULTADO, @PIN_XML_RESULTADOS,NULL,@PIN_ID_CUESTIONARIO,@PIN_NB_PRUEBA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA

			END
			----------------------------------------------------------------------------------
			
		-----------------------------------------------------------------------------------------------------------
			IF  @PIN_NB_PRUEBA = 'ORTOGRAFIA-3' 
			BEGIN 
					    SELECT
						@RESPUESTAS_CORRECTAS =SUM(COLUMNA.value('@NO_VALOR_RESPUESTA', 'INT'))
						FROM @PIN_XML_RESULTADOS.nodes('/RESPUESTAS/RESPUESTA') tbl(COLUMNA)
						INNER JOIN IDP.C_VARIABLE v ON COLUMNA.value('@CL_PREGUNTA', 'NVARCHAR(20)') = v.CL_VARIABLE

			INSERT INTO [IDP].[K_RESULTADO]
			([CL_TIPO_RESULTADO],
			[ID_VARIABLE],
			[NO_VALOR],
			[ID_CUESTIONARIO],
			[FE_CREACION],
			[CL_USUARIO_APP_CREA],
			[NB_PROGRAMA_CREA])
			
		    VALUES ( 2,864,@RESPUESTAS_CORRECTAS,@PIN_ID_CUESTIONARIO,GETDATE(),@PIN_CL_USUARIO_APP, @PIN_NB_PROGRAMA)
	        EXEC  [IDP].[SPE_INSERTA_REPORTE_ORTOGRAFIAS] @XML_RESULTADO, @PIN_XML_RESULTADOS,NULL,@PIN_ID_CUESTIONARIO,@PIN_NB_PRUEBA,@PIN_CL_USUARIO_APP,@PIN_NB_PROGRAMA
			   		
			END
			--------------------------------------------------------------------------------
		END

		--SE DEVUELVE LA VARIABLE DE RETORNO INDICANDO QUE TODO SE REALIZO CORRECTAMENTE
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, 1, 'SUCCESSFUL')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Proceso exitoso', 'ES')
		SET @XML_RESULTADO = DBO.F_ERROR_INSERTAR_MENSAJES(@XML_RESULTADO, 'Successful Process', 'EN')
		--SI SE GENERO UNA TRANSACCION EN ESTE BLOQUE LA TERMINARA
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			COMMIT
	END TRY
	BEGIN CATCH
		--SI OCURRIO UN ERROR Y SE INICIO UNA TRANSACCION ENE ESTE BLOQUE SE CANCELARA LA TRANSACCION
		IF (@@TRANCOUNT > 0 AND @V_EXIST_TRAN = 1)
			ROLLBACK
		--SE INDICA EN LA VARIABLE DE RETORNO QUE OCURRIO UN ERROR
		--SET @POUT_CLAVE_RETORNO = 0
		--SE INSERTA EL ERROR EN LA TABLA
		DECLARE @ERROR_CLAVE INT  = ERROR_NUMBER()
		DECLARE @ERROR_MENSAJE NVARCHAR(250)  = ERROR_MESSAGE()
		
		SET @XML_RESULTADO = DBO.F_ERROR_CREAR_ENCABEZADO( @@ROWCOUNT, @ERROR_CLAVE, 'ERROR')
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(@ERROR_CLAVE,@ERROR_MENSAJE)
		SET @XML_RESULTADO = DBO.F_ERROR_MENSAJES(@ERROR_CLAVE,@ERROR_MENSAJE)			
	END CATCH
END


